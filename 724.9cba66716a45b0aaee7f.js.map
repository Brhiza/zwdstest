{"version":3,"file":"724.9cba66716a45b0aaee7f.js","mappings":"oJAKA,MA2CA,EA3CuB,EAAGA,OAAO,UAAWC,QAAQ,EAAGC,WAAU,MAC7D,MAAMC,EAAwB,IAAO,gBAAoB,MAAO,CAAEC,UAAW,oBACzE,gBAAoB,MAAO,CAAEA,UAAW,oBACxC,gBAAoB,MAAO,CAAEA,UAAW,oBACpC,gBAAoB,MAAO,CAAEA,UAAW,iCACxC,gBAAoB,MAAO,CAAEA,UAAW,kBACxC,gBAAoB,MAAO,CAAEA,UAAW,kCAC1CC,EAAqB,IAAO,gBAAoB,MAAO,CAAED,UAAW,iBACtE,gBAAoB,MAAO,CAAEA,UAAW,mBACpC,gBAAoB,MAAO,CAAEA,UAAW,mBACxC,gBAAoB,MAAO,CAAEA,UAAW,uBAC5C,gBAAoB,MAAO,CAAEA,UAAW,qBAAuBE,MAAMC,KAAK,CAAEC,OAAQ,IAAKC,IAAI,CAACC,EAAGC,IAAW,gBAAoB,MAAO,CAAEC,IAAKD,EAAOP,UAAW,4BAC5J,gBAAoB,MAAO,CAAEA,UAAW,4BACxC,gBAAoB,MAAO,CAAEA,UAAW,4BACpC,gBAAoB,MAAO,CAAEA,UAAW,0BACxC,gBAAoB,MAAO,CAAEA,UAAW,6CAChD,gBAAoB,MAAO,CAAEA,UAAW,kBACpC,gBAAoB,MAAO,CAAEA,UAAW,yBACxC,gBAAoB,MAAO,CAAEA,UAAW,4BAC1CS,EAAsB,IAAO,gBAAoB,MAAO,CAAET,UAAW,4BACvE,gBAAoB,MAAO,CAAEA,UAAW,yBACxC,gBAAoB,MAAO,CAAEA,UAAW,2BAoB5C,OAAQ,gBAAoB,MAAO,CAAEA,UAAW,oBAAmBF,EAAU,mBAAqB,KAnB1E,MACpB,MAAMY,EAAY,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAOc,IACvB,OAAQf,GACJ,IAAK,UASL,QACIc,EAAUE,KAAK,gBAAoB,MAAO,CAAEJ,IAAKG,GAAKZ,YAP1D,IAAK,OACDW,EAAUE,KAAK,gBAAoB,MAAO,CAAEJ,IAAKG,GAAKV,MACtD,MACJ,IAAK,QACDS,EAAUE,KAAK,gBAAoB,MAAO,CAAEJ,IAAKG,GAAKF,MAMlE,OAAOC,GAE+FG,I","sources":["webpack://react-iztro/./src/AIChat/components/SkeletonLoader.tsx"],"sourcesContent":["import React from 'react';\n/**\n * 骨架屏加载组件\n * 提供多种类型的骨架屏加载效果，改善用户体验\n */\nconst SkeletonLoader = ({ type = 'message', count = 1, animate = true, }) => {\n    const renderMessageSkeleton = () => (React.createElement(\"div\", { className: \"skeleton-message\" },\n        React.createElement(\"div\", { className: \"skeleton-avatar\" }),\n        React.createElement(\"div\", { className: \"skeleton-content\" },\n            React.createElement(\"div\", { className: \"skeleton-line skeleton-short\" }),\n            React.createElement(\"div\", { className: \"skeleton-line\" }),\n            React.createElement(\"div\", { className: \"skeleton-line skeleton-long\" }))));\n    const renderChatSkeleton = () => (React.createElement(\"div\", { className: \"skeleton-chat\" },\n        React.createElement(\"div\", { className: \"skeleton-header\" },\n            React.createElement(\"div\", { className: \"skeleton-title\" }),\n            React.createElement(\"div\", { className: \"skeleton-subtitle\" })),\n        React.createElement(\"div\", { className: \"skeleton-messages\" }, Array.from({ length: 3 }).map((_, index) => (React.createElement(\"div\", { key: index, className: \"skeleton-message-wrapper\" },\n            React.createElement(\"div\", { className: \"skeleton-message-avatar\" }),\n            React.createElement(\"div\", { className: \"skeleton-message-content\" },\n                React.createElement(\"div\", { className: \"skeleton-message-line\" }),\n                React.createElement(\"div\", { className: \"skeleton-message-line skeleton-short\" })))))),\n        React.createElement(\"div\", { className: \"skeleton-input\" },\n            React.createElement(\"div\", { className: \"skeleton-input-field\" }),\n            React.createElement(\"div\", { className: \"skeleton-input-button\" }))));\n    const renderInputSkeleton = () => (React.createElement(\"div\", { className: \"skeleton-input-container\" },\n        React.createElement(\"div\", { className: \"skeleton-input-field\" }),\n        React.createElement(\"div\", { className: \"skeleton-input-button\" })));\n    const renderSkeletons = () => {\n        const skeletons = [];\n        for (let i = 0; i < count; i++) {\n            switch (type) {\n                case 'message':\n                    skeletons.push(React.createElement(\"div\", { key: i }, renderMessageSkeleton()));\n                    break;\n                case 'chat':\n                    skeletons.push(React.createElement(\"div\", { key: i }, renderChatSkeleton()));\n                    break;\n                case 'input':\n                    skeletons.push(React.createElement(\"div\", { key: i }, renderInputSkeleton()));\n                    break;\n                default:\n                    skeletons.push(React.createElement(\"div\", { key: i }, renderMessageSkeleton()));\n            }\n        }\n        return skeletons;\n    };\n    return (React.createElement(\"div\", { className: `skeleton-loader ${animate ? 'skeleton-animate' : ''}` }, renderSkeletons()));\n};\nexport default SkeletonLoader;\n"],"names":["type","count","animate","renderMessageSkeleton","className","renderChatSkeleton","Array","from","length","map","_","index","key","renderInputSkeleton","skeletons","i","push","renderSkeletons"],"sourceRoot":""}