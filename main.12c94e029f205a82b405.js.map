{"version":3,"file":"main.12c94e029f205a82b405.js","mappings":"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","sources":["webpack://react-iztro/./src/AIChat/AIChatContext.tsx","webpack://react-iztro/./src/utils/useKeyboardDetector.ts","webpack://react-iztro/./src/containers/AppContainer.tsx","webpack://react-iztro/./src/Izstar/Izstar.tsx","webpack://react-iztro/./src/Izpalace/Izpalace.tsx","webpack://react-iztro/./src/IzpalaceCenter/Item.tsx","webpack://react-iztro/./src/IzpalaceCenter/Line.tsx","webpack://react-iztro/./src/IzpalaceCenter/IzpalaceCenter.tsx","webpack://react-iztro/./src/Iztrolabe/Iztrolabe.tsx","webpack://react-iztro/./src/SegmentedControl/SegmentedControl.tsx","webpack://react-iztro/./src/containers/ResultContainer.tsx","webpack://react-iztro/./src/utils/cloudStorage.ts","webpack://react-iztro/./src/utils/historyUtils.ts","webpack://react-iztro/./src/hooks/useHistoryManager.ts","webpack://react-iztro/./src/containers/FormContainer.tsx","webpack://react-iztro/./src/components/FormPanel.tsx","webpack://react-iztro/./src/components/HistoryModal.tsx","webpack://react-iztro/./src/App.tsx","webpack://react-iztro/./src/index.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useMemo, useCallback } from 'react';\n// --- Helper Functions ---\nconst generateUUID = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nconst STORAGE_KEY = 'aiChatSessions';\nconst AIChatContext = createContext(undefined);\n// --- Provider Component ---\nexport const AIChatProvider = ({ children }) => {\n    const [sessions, setSessions] = useState([]);\n    const [activeSessionId, setActiveSessionId] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isGeneratingInBackground, setIsGeneratingInBackground] = useState(false);\n    const [model, setModel] = useState(\"sydf/v1-250520\");\n    // Load sessions from localStorage on initial render\n    useEffect(() => {\n        try {\n            const savedSessions = localStorage.getItem(STORAGE_KEY);\n            if (savedSessions) {\n                const parsedSessions = JSON.parse(savedSessions);\n                if (parsedSessions.length > 0) {\n                    setSessions(parsedSessions);\n                    // Activate the most recent session\n                    setActiveSessionId(parsedSessions[0].id);\n                }\n            }\n        }\n        catch (error) {\n            console.error(\"Failed to load chat sessions from localStorage\", error);\n        }\n    }, []);\n    // Save sessions to localStorage whenever they change\n    useEffect(() => {\n        try {\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(sessions));\n        }\n        catch (error) {\n            console.error(\"Failed to save chat sessions to localStorage\", error);\n        }\n    }, [sessions]);\n    const createSession = useCallback(() => {\n        const newSession = {\n            id: generateUUID(),\n            title: '新的对话',\n            messages: [],\n            createdAt: Date.now(),\n        };\n        setSessions(prev => [newSession, ...prev]);\n        setActiveSessionId(newSession.id);\n        return newSession;\n    }, []);\n    const switchSession = useCallback((sessionId) => {\n        const sessionExists = sessions.some(s => s.id === sessionId);\n        if (sessionExists) {\n            setActiveSessionId(sessionId);\n        }\n        else {\n            console.error(`Session with id ${sessionId} not found.`);\n        }\n    }, [sessions]);\n    const deleteSession = useCallback((sessionId) => {\n        setSessions(prev => {\n            const newSessions = prev.filter(s => s.id !== sessionId);\n            if (activeSessionId === sessionId) {\n                setActiveSessionId(newSessions.length > 0 ? newSessions[0].id : null);\n            }\n            return newSessions;\n        });\n    }, [activeSessionId]);\n    const clearAllSessions = useCallback(() => {\n        setSessions([]);\n        setActiveSessionId(null);\n        // The useEffect for localStorage will handle the actual clearing.\n    }, []);\n    const updateSessionMessages = useCallback((sessionId, newMessages) => {\n        setSessions(prev => prev.map(session => session.id === sessionId\n            ? { ...session, messages: typeof newMessages === 'function' ? newMessages(session.messages) : newMessages }\n            : session));\n    }, []);\n    const setMessages = useCallback((messages) => {\n        if (activeSessionId) {\n            updateSessionMessages(activeSessionId, messages);\n        }\n    }, [activeSessionId, updateSessionMessages]);\n    const addMessage = useCallback((message) => {\n        if (activeSessionId) {\n            updateSessionMessages(activeSessionId, prev => [...prev, message]);\n        }\n    }, [activeSessionId, updateSessionMessages]);\n    const updateLastMessage = useCallback((content) => {\n        if (activeSessionId) {\n            updateSessionMessages(activeSessionId, prev => {\n                if (prev.length === 0 || prev[prev.length - 1].role !== 'assistant') {\n                    return prev;\n                }\n                const newMessages = [...prev];\n                newMessages[newMessages.length - 1] = { ...newMessages[newMessages.length - 1], content };\n                return newMessages;\n            });\n        }\n    }, [activeSessionId, updateSessionMessages]);\n    const clearMessages = useCallback(() => {\n        if (activeSessionId) {\n            updateSessionMessages(activeSessionId, []);\n        }\n    }, [activeSessionId, updateSessionMessages]);\n    const updateSessionTitle = useCallback((sessionId, title) => {\n        setSessions(prev => prev.map(session => session.id === sessionId ? { ...session, title } : session));\n    }, []);\n    const activeSession = useMemo(() => {\n        return sessions.find(s => s.id === activeSessionId) ?? null;\n    }, [sessions, activeSessionId]);\n    const contextValue = {\n        sessions,\n        activeSessionId,\n        activeSession,\n        isLoading,\n        isGeneratingInBackground,\n        model,\n        createSession,\n        switchSession,\n        deleteSession,\n        setMessages,\n        addMessage,\n        updateLastMessage,\n        updateSessionTitle,\n        clearMessages,\n        clearAllSessions,\n        setModel,\n        setIsLoading,\n        setIsGeneratingInBackground,\n    };\n    return (React.createElement(AIChatContext.Provider, { value: contextValue }, children));\n};\n// --- Custom Hook ---\nexport const useAIChat = () => {\n    const context = useContext(AIChatContext);\n    if (context === undefined) {\n        throw new Error('useAIChat must be used within an AIChatProvider');\n    }\n    return context;\n};\n","import { useState, useEffect } from 'react';\n/**\n * 键盘检测Hook\n * 用于检测虚拟键盘的显示状态和高度\n */\nexport const useKeyboardDetector = () => {\n    const [isKeyboardVisible, setIsKeyboardVisible] = useState(false);\n    const [keyboardHeight, setKeyboardHeight] = useState(0);\n    useEffect(() => {\n        // 检测是否为移动设备\n        const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        if (!isMobile) {\n            return; // 非移动设备不进行键盘检测\n        }\n        const handleResize = () => {\n            const viewportHeight = window.visualViewport?.height || window.innerHeight;\n            const windowHeight = window.innerHeight;\n            const screenHeight = window.screen?.height || windowHeight;\n            // 计算键盘高度\n            const calculatedKeyboardHeight = windowHeight - viewportHeight;\n            // 判断键盘是否可见（高度变化超过100px认为是键盘弹出）\n            const isKeyboardNowVisible = calculatedKeyboardHeight > 100;\n            setIsKeyboardVisible(isKeyboardNowVisible);\n            setKeyboardHeight(isKeyboardNowVisible ? calculatedKeyboardHeight : 0);\n            // 更新CSS变量\n            document.documentElement.style.setProperty('--keyboard-height', `${isKeyboardNowVisible ? calculatedKeyboardHeight : 0}px`);\n            document.documentElement.style.setProperty('--is-keyboard-visible', isKeyboardNowVisible ? 'true' : 'false');\n            // 更新body的class\n            if (isKeyboardNowVisible) {\n                document.body.classList.add('keyboard-visible');\n            }\n            else {\n                document.body.classList.remove('keyboard-visible');\n            }\n        };\n        // 初始检测\n        handleResize();\n        // 使用visualViewport事件监听（如果支持）\n        if (window.visualViewport) {\n            window.visualViewport.addEventListener('resize', handleResize);\n            window.visualViewport.addEventListener('scroll', handleResize);\n        }\n        else {\n            // 回退到window的resize事件\n            window.addEventListener('resize', handleResize);\n        }\n        // 监听输入框的focus和blur事件\n        const handleFocusIn = (e) => {\n            const target = e.target;\n            if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n                // 延迟检测，确保键盘已经弹出\n                setTimeout(handleResize, 100);\n            }\n        };\n        const handleFocusOut = (e) => {\n            const target = e.target;\n            if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n                // 延迟检测，确保键盘已经收起\n                setTimeout(handleResize, 300);\n            }\n        };\n        document.addEventListener('focusin', handleFocusIn);\n        document.addEventListener('focusout', handleFocusOut);\n        // 清理函数\n        return () => {\n            if (window.visualViewport) {\n                window.visualViewport.removeEventListener('resize', handleResize);\n                window.visualViewport.removeEventListener('scroll', handleResize);\n            }\n            else {\n                window.removeEventListener('resize', handleResize);\n            }\n            document.removeEventListener('focusin', handleFocusIn);\n            document.removeEventListener('focusout', handleFocusOut);\n        };\n    }, []);\n    return { isKeyboardVisible, keyboardHeight };\n};\n/**\n * 安全区域检测Hook\n * 用于获取设备的安全区域信息\n */\nexport const useSafeArea = () => {\n    const [safeArea, setSafeArea] = useState({\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    });\n    useEffect(() => {\n        const updateSafeArea = () => {\n            // 创建一个临时元素来获取CSS变量值\n            const tempElement = document.createElement('div');\n            tempElement.style.position = 'absolute';\n            tempElement.style.top = '-9999px';\n            tempElement.style.left = '-9999px';\n            document.body.appendChild(tempElement);\n            // 获取计算后的样式\n            const computedStyle = window.getComputedStyle(tempElement);\n            const newSafeArea = {\n                top: parseInt(computedStyle.getPropertyValue('--safe-area-inset-top')) || 0,\n                right: parseInt(computedStyle.getPropertyValue('--safe-area-inset-right')) || 0,\n                bottom: parseInt(computedStyle.getPropertyValue('--safe-area-inset-bottom')) || 0,\n                left: parseInt(computedStyle.getPropertyValue('--safe-area-inset-left')) || 0,\n            };\n            // 移除临时元素\n            document.body.removeChild(tempElement);\n            setSafeArea(newSafeArea);\n        };\n        // 初始更新\n        updateSafeArea();\n        // 监听窗口大小变化（安全区域可能在旋转屏幕时改变）\n        window.addEventListener('resize', updateSafeArea);\n        window.addEventListener('orientationchange', updateSafeArea);\n        return () => {\n            window.removeEventListener('resize', updateSafeArea);\n            window.removeEventListener('orientationchange', updateSafeArea);\n        };\n    }, []);\n    return safeArea;\n};\n","import React from 'react';\nimport { useKeyboardDetector, useSafeArea } from '../utils/useKeyboardDetector';\n/**\n * 应用容器组件\n * 负责处理全局布局、键盘检测和安全区域适配\n */\nexport const AppContainer = ({ children }) => {\n    const { isKeyboardVisible } = useKeyboardDetector();\n    const safeArea = useSafeArea();\n    return (React.createElement(\"div\", { className: `App ${isKeyboardVisible ? 'keyboard-visible' : ''}` }, children));\n};\nexport default AppContainer;\n","import React, { useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport { MUTAGEN } from \"iztro/lib/data\";\nimport { kot, t } from \"iztro/lib/i18n\";\nimport { getMutagensByHeavenlyStem } from \"iztro/lib/utils\";\nexport const Izstar = ({ horoscopeMutagens, activeHeavenlyStem, hoverHeavenlyStem, palaceHeavenlyStem, ...star }) => {\n    const mutagenStyle = useMemo(() => {\n        if (!activeHeavenlyStem) {\n            return \"\";\n        }\n        const mutagens = getMutagensByHeavenlyStem(t(activeHeavenlyStem));\n        const index = mutagens.indexOf(star.name);\n        if (index < 0) {\n            return \"\";\n        }\n        return `iztro-star-mutagen-${index}`;\n    }, [activeHeavenlyStem, star.name]);\n    const hoverMutagenStyle = useMemo(() => {\n        if (!hoverHeavenlyStem) {\n            return \"\";\n        }\n        const mutagens = getMutagensByHeavenlyStem(t(hoverHeavenlyStem));\n        const index = mutagens.indexOf(star.name);\n        if (index < 0) {\n            return \"\";\n        }\n        return `iztro-star-hover-mutagen-${index}`;\n    }, [hoverHeavenlyStem, star.name]);\n    const selfMutagenStyle = useMemo(() => {\n        if (!palaceHeavenlyStem || activeHeavenlyStem || hoverHeavenlyStem) {\n            return undefined;\n        }\n        const mutagens = getMutagensByHeavenlyStem(t(palaceHeavenlyStem));\n        const index = mutagens.indexOf(star.name);\n        if (index < 0) {\n            return \"\";\n        }\n        return `iztro-star-self-mutagen-${index}`;\n    }, [palaceHeavenlyStem, activeHeavenlyStem, hoverHeavenlyStem]);\n    return (React.createElement(\"div\", { className: classNames(\"iztro-star\", `iztro-star-${star.type}`) },\n        React.createElement(\"span\", { className: classNames(\"star-with-mutagen\", mutagenStyle, selfMutagenStyle, hoverMutagenStyle, {\n                \"iztro-star-self-mutagen\": !!selfMutagenStyle,\n            }) }, star.name),\n        React.createElement(\"i\", { className: classNames(\"iztro-star-brightness\") }, star.brightness),\n        star.mutagen && (React.createElement(\"span\", { className: classNames(\"iztro-star-mutagen\", `mutagen-${MUTAGEN.indexOf(kot(star.mutagen))}`) }, star.mutagen)),\n        horoscopeMutagens?.map((item) => {\n            if (item.mutagen.includes(star.name) && item.show) {\n                return (React.createElement(\"span\", { key: item.scope, className: classNames(\"iztro-star-mutagen\", `mutagen-${item.scope}`) }, t(MUTAGEN[item.mutagen.indexOf(star.name)])));\n            }\n        })));\n};\n","import React, { useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport \"../styles/index.css\";\nimport { Izstar } from \"../Izstar\";\nimport { kot, t } from \"iztro/lib/i18n\";\nimport { fixIndex } from \"iztro/lib/utils\";\nexport const Izpalace = ({ index, taichiPalace, focusedIndex, onFocused, horoscope, activeHeavenlyStem, toggleActiveHeavenlyStem, hoverHeavenlyStem, setHoverHeavenlyStem, showDecadalScope = false, showYearlyScope = false, showMonthlyScope = false, showDailyScope = false, showHourlyScope = false, toggleScope, toggleTaichiPoint, ...palace }) => {\n    const horoscopeNames = useMemo(() => {\n        const horoscopeNames = [];\n        if (horoscope?.decadal.index === index) {\n            horoscopeNames.push({\n                ...horoscope.decadal,\n                scope: \"decadal\",\n                show: showDecadalScope,\n            });\n        }\n        if (horoscope?.yearly.index === index) {\n            horoscopeNames.push({\n                ...horoscope.yearly,\n                scope: \"yearly\",\n                show: showYearlyScope,\n            });\n        }\n        if (horoscope?.monthly.index === index) {\n            horoscopeNames.push({\n                ...horoscope.monthly,\n                scope: \"monthly\",\n                show: showMonthlyScope,\n            });\n        }\n        if (horoscope?.daily.index === index) {\n            horoscopeNames.push({\n                ...horoscope.daily,\n                scope: \"daily\",\n                show: showDailyScope,\n            });\n        }\n        if (horoscope?.hourly.index === index) {\n            horoscopeNames.push({\n                ...horoscope.hourly,\n                scope: \"hourly\",\n                show: showHourlyScope,\n            });\n        }\n        if (horoscope?.age.index === index) {\n            horoscopeNames.push({\n                name: horoscope.age.name,\n                heavenlyStem: undefined,\n                scope: \"age\",\n                show: false,\n            });\n        }\n        return horoscopeNames;\n    }, [\n        horoscope,\n        showDecadalScope,\n        showYearlyScope,\n        showMonthlyScope,\n        showDailyScope,\n        showHourlyScope,\n    ]);\n    const horoscopeMutagens = useMemo(() => {\n        if (!horoscope) {\n            return [];\n        }\n        return [\n            {\n                mutagen: horoscope.decadal.mutagen,\n                scope: \"decadal\",\n                show: showDecadalScope,\n            },\n            {\n                mutagen: horoscope.yearly.mutagen,\n                scope: \"yearly\",\n                show: showYearlyScope,\n            },\n            {\n                mutagen: horoscope.monthly.mutagen,\n                scope: \"monthly\",\n                show: showMonthlyScope,\n            },\n            {\n                mutagen: horoscope.daily.mutagen,\n                scope: \"daily\",\n                show: showDailyScope,\n            },\n            {\n                mutagen: horoscope.hourly.mutagen,\n                scope: \"hourly\",\n                show: showHourlyScope,\n            },\n        ];\n    }, [\n        horoscope,\n        showDecadalScope,\n        showYearlyScope,\n        showMonthlyScope,\n        showDailyScope,\n        showHourlyScope,\n    ]);\n    return (React.createElement(\"div\", { className: classNames(`iztro-palace g${index}`, {\n            \"focused-palace\": focusedIndex === index,\n            \"opposite-palace\": focusedIndex != undefined && index === fixIndex(focusedIndex + 6),\n            \"surrounded-palace\": focusedIndex != undefined &&\n                (index === fixIndex(focusedIndex + 4) ||\n                    index === fixIndex(focusedIndex - 4)),\n        }), onMouseEnter: () => onFocused?.(index), onMouseLeave: () => onFocused?.(undefined) },\n        React.createElement(\"div\", { className: classNames(\"iztro-palace-major\") }, palace.majorStars.map((star) => (React.createElement(Izstar, { key: star.name, activeHeavenlyStem: activeHeavenlyStem, hoverHeavenlyStem: hoverHeavenlyStem, palaceHeavenlyStem: kot(palace.heavenlyStem, \"Heavenly\"), horoscopeMutagens: horoscopeMutagens, ...star })))),\n        React.createElement(\"div\", { className: classNames(\"iztro-palace-minor\") }, palace.minorStars.map((star) => (React.createElement(Izstar, { key: star.name, activeHeavenlyStem: activeHeavenlyStem, hoverHeavenlyStem: hoverHeavenlyStem, palaceHeavenlyStem: kot(palace.heavenlyStem, \"Heavenly\"), horoscopeMutagens: horoscopeMutagens, ...star })))),\n        React.createElement(\"div\", { className: classNames(\"iztro-palace-adj\") },\n            React.createElement(\"div\", null, palace.adjectiveStars.slice(5).map((star) => (React.createElement(Izstar, { key: star.name, ...star })))),\n            React.createElement(\"div\", null, palace.adjectiveStars.slice(0, 5).map((star) => (React.createElement(Izstar, { key: star.name, ...star }))))),\n        React.createElement(\"div\", { className: classNames(\"iztro-palace-horo-star\") },\n            React.createElement(\"div\", { className: classNames(\"stars\") }, horoscope?.decadal?.stars &&\n                horoscope?.decadal?.stars[index].map((star) => (React.createElement(Izstar, { key: star.name, ...star })))),\n            React.createElement(\"div\", { className: classNames(\"stars\") }, horoscope?.yearly?.stars &&\n                horoscope?.yearly?.stars[index].map((star) => (React.createElement(Izstar, { key: star.name, ...star }))))),\n        React.createElement(\"div\", { className: classNames(\"iztro-palace-fate\") }, horoscopeNames?.map((item) => (React.createElement(\"span\", { key: item.name, className: classNames({\n                [`iztro-palace-${item.scope}-active`]: item.show,\n            }), onClick: item.scope ? () => toggleScope?.(item.scope) : undefined },\n            item.name,\n            item.heavenlyStem && `·${item.heavenlyStem}`)))),\n        React.createElement(\"div\", { className: classNames(\"iztro-palace-footer\") },\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", { className: classNames(\"iztro-palace-lft24\") },\n                    React.createElement(\"div\", null, palace.changsheng12),\n                    React.createElement(\"div\", null, palace.boshi12)),\n                React.createElement(\"div\", { className: classNames(\"iztro-palace-name\"), onClick: () => toggleTaichiPoint?.(index) },\n                    React.createElement(\"span\", { className: \"iztro-palace-name-wrapper\" },\n                        palace.name,\n                        React.createElement(\"span\", { className: \"iztro-palace-name-taichi\" }, taichiPalace &&\n                            (kot(taichiPalace) === kot(\"命宫\")\n                                ? \"☯\"\n                                : taichiPalace))),\n                    palace.isBodyPalace && (React.createElement(\"span\", { className: classNames(\"iztro-palace-name-body\") },\n                        \"\\u00B7\",\n                        t(\"bodyPalace\"))))),\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", { className: classNames(\"iztro-palace-scope\") },\n                    React.createElement(\"div\", { className: classNames(\"iztro-palace-scope-age\") }, palace.ages.slice(0, 7).join(\" \")),\n                    React.createElement(\"div\", { className: classNames(\"iztro-palace-scope-decadal\") }, palace.decadal.range.join(\" - \"))),\n                React.createElement(\"div\", { className: classNames(\"iztro-palace-dynamic-name\") },\n                    showDecadalScope && (React.createElement(\"span\", { className: \"iztro-palace-dynamic-name-decadal\" }, horoscope?.decadal.palaceNames[index])),\n                    showYearlyScope && (React.createElement(\"span\", { className: \"iztro-palace-dynamic-name-yearly\" }, horoscope?.yearly.palaceNames[index])),\n                    showMonthlyScope && (React.createElement(\"span\", { className: \"iztro-palace-dynamic-name-monthly\" }, horoscope?.monthly.palaceNames[index])),\n                    showDailyScope && (React.createElement(\"span\", { className: \"iztro-palace-dynamic-name-daily\" }, horoscope?.daily.palaceNames[index])),\n                    showHourlyScope && (React.createElement(\"span\", { className: \"iztro-palace-dynamic-name-hourly\" }, horoscope?.hourly.palaceNames[index])))),\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", { className: classNames(\"iztro-palace-rgt24\") },\n                    React.createElement(\"div\", null, showYearlyScope\n                        ? horoscope?.yearly.yearlyDecStar.suiqian12[index]\n                        : palace.suiqian12),\n                    React.createElement(\"div\", null, showYearlyScope\n                        ? horoscope?.yearly.yearlyDecStar.jiangqian12[index]\n                        : palace.jiangqian12)),\n                React.createElement(\"div\", { className: classNames(\"iztro-palace-gz\", {\n                        \"iztro-palace-gz-active\": activeHeavenlyStem ===\n                            kot(palace.heavenlyStem, \"Heavenly\"),\n                    }), onClick: () => toggleActiveHeavenlyStem?.(kot(palace.heavenlyStem, \"Heavenly\")), onMouseEnter: () => setHoverHeavenlyStem?.(kot(palace.heavenlyStem, \"Heavenly\")), onMouseLeave: () => setHoverHeavenlyStem?.(undefined) },\n                    React.createElement(\"span\", { className: classNames({\n                            \"iztro-palace-gz-active\": activeHeavenlyStem ===\n                                kot(palace.heavenlyStem, \"Heavenly\"),\n                        }) },\n                        palace.heavenlyStem,\n                        palace.earthlyBranch))))));\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nexport const Item = ({ title, content }) => {\n    return (React.createElement(\"li\", { className: classNames(\"iztro-palace-center-item\") },\n        React.createElement(\"label\", null, title),\n        React.createElement(\"span\", null, content)));\n};\n","import React, { useEffect, useMemo, useRef } from \"react\";\nimport { fixIndex } from \"iztro/lib/utils\";\nexport const Line = ({ index, scope }) => {\n    const line = useRef(null);\n    const strokeColor = useMemo(() => {\n        if (scope) {\n            const element = document.getElementsByClassName(\"iztro-astrolabe-theme-default\")[0];\n            const computedStyle = getComputedStyle(element);\n            // 获取CSS中定义的变量的值\n            return computedStyle.getPropertyValue(`--iztro-color-${scope}`);\n        }\n        return \"rgba(245,0,0)\";\n    }, [scope]);\n    useEffect(() => {\n        const idx = index;\n        const canvasDom = line.current;\n        if (!canvasDom || idx < 0) {\n            return;\n        }\n        const { height, width } = canvasDom.getBoundingClientRect();\n        canvasDom.width = width;\n        canvasDom.height = height;\n        const w = width / 2;\n        const h = height / 2;\n        const points = [\n            [0, h * 2],\n            [0, h * 1.5],\n            [0, h * 0.5],\n            [0, 0],\n            [w * 0.5, 0],\n            [w * 1.5, 0],\n            [w * 2, 0],\n            [w * 2, h * 0.5],\n            [w * 2, h * 1.5],\n            [w * 2, h * 2],\n            [w * 1.5, h * 2],\n            [w * 0.5, h * 2],\n        ];\n        //第二步：获取上下文\n        const canvasCtx = canvasDom.getContext(\"2d\");\n        if (!canvasCtx) {\n            return;\n        }\n        canvasCtx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n        canvasCtx.strokeStyle = strokeColor;\n        canvasCtx.lineWidth = 1;\n        canvasCtx.globalAlpha = 0.5;\n        const dgIdx = fixIndex(idx + 6);\n        const q4Idx = fixIndex(idx + 4);\n        const h4Idx = fixIndex(idx - 4);\n        canvasCtx.beginPath();\n        canvasCtx.moveTo(points[dgIdx][0], points[dgIdx][1]);\n        canvasCtx.lineTo(points[idx][0], points[idx][1]);\n        canvasCtx.lineTo(points[q4Idx][0], points[q4Idx][1]);\n        canvasCtx.lineTo(points[h4Idx][0], points[h4Idx][1]);\n        canvasCtx.lineTo(points[idx][0], points[idx][1]);\n        canvasCtx.stroke();\n    }, [index, strokeColor]);\n    return (React.createElement(\"canvas\", { id: \"palace-line\", className: `palace-line ${scope || ''}`, ref: line }));\n};\n","import classNames from \"classnames\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { Item } from \"./Item\";\nimport \"../styles/index.css\";\nimport { Line } from \"./Line\";\nimport { fixEarthlyBranchIndex } from \"iztro/lib/utils\";\nimport { normalizeDateStr, solar2lunar } from \"lunar-lite\";\nimport { kot, t } from \"iztro/lib/i18n\";\nimport { CHINESE_TIME } from \"iztro/lib/data\";\nexport const IzpalaceCenter = ({ astrolabe, horoscope, arrowIndex, arrowScope, horoscopeDate = new Date(), horoscopeHour = 0, setHoroscopeDate, setHoroscopeHour, centerPalaceAlign, }) => {\n    const records = useMemo(() => [\n        {\n            title: \"五行局：\",\n            content: astrolabe?.fiveElementsClass,\n        },\n        {\n            title: \"年龄(虚岁)：\",\n            content: `${horoscope?.age.nominalAge} 岁`,\n        },\n        {\n            title: \"四柱：\",\n            content: astrolabe?.chineseDate,\n        },\n        {\n            title: \"阳历：\",\n            content: astrolabe?.solarDate,\n        },\n        {\n            title: \"农历：\",\n            content: astrolabe?.lunarDate,\n        },\n        {\n            title: \"时辰：\",\n            content: `${astrolabe?.time}(${astrolabe?.timeRange})`,\n        },\n        {\n            title: \"生肖：\",\n            content: astrolabe?.zodiac,\n        },\n        {\n            title: \"星座：\",\n            content: astrolabe?.sign,\n        },\n        {\n            title: \"命主：\",\n            content: astrolabe?.soul,\n        },\n        {\n            title: \"身主：\",\n            content: astrolabe?.body,\n        },\n        {\n            title: \"命宫：\",\n            content: astrolabe?.earthlyBranchOfSoulPalace,\n        },\n        {\n            title: \"身宫：\",\n            content: astrolabe?.earthlyBranchOfBodyPalace,\n        },\n    ], [astrolabe, horoscope]);\n    const horoDate = useMemo(() => {\n        const dateStr = horoscopeDate ?? new Date();\n        const [year, month, date] = normalizeDateStr(dateStr);\n        const dt = new Date(year, month - 1, date);\n        return {\n            solar: `${year}-${month}-${date}`,\n            lunar: solar2lunar(dateStr).toString(true),\n            prevDecadalDisabled: dt.setFullYear(dt.getFullYear() - 1),\n        };\n    }, [horoscopeDate]);\n    const onHoroscopeButtonClicked = (scope, value) => {\n        if (!astrolabe?.solarDate) {\n            return true;\n        }\n        const [year, month, date] = normalizeDateStr(horoscopeDate);\n        const dt = new Date(year, month - 1, date);\n        const [birthYear, birthMonth, birthDate] = normalizeDateStr(astrolabe.solarDate);\n        const birthday = new Date(birthYear, birthMonth - 1, birthDate);\n        let hour = horoscopeHour;\n        switch (scope) {\n            case \"hourly\":\n                hour = horoscopeHour + value;\n                if (horoscopeHour + value > 11) {\n                    // 如果大于亥时，则加一天，时辰变为早子时\n                    dt.setDate(dt.getDate() + 1);\n                    hour = 0;\n                }\n                else if (horoscopeHour + value < 0) {\n                    // 如果小于早子时，则减一天，时辰变为亥时\n                    dt.setDate(dt.getDate() - 1);\n                    hour = 11;\n                }\n                break;\n            case \"daily\":\n                dt.setDate(dt.getDate() + value);\n                break;\n            case \"monthly\":\n                dt.setMonth(dt.getMonth() + value);\n                break;\n            case \"yearly\":\n            case \"decadal\":\n                dt.setFullYear(dt.getFullYear() + value);\n                break;\n        }\n        if (dt.getTime() >= birthday.getTime()) {\n            setHoroscopeDate?.(dt);\n            setHoroscopeHour?.(hour);\n        }\n    };\n    const shouldBeDisabled = useCallback((dateStr, scope, value) => {\n        if (!astrolabe?.solarDate) {\n            return true;\n        }\n        const [year, month, date] = normalizeDateStr(dateStr);\n        const dt = new Date(year, month - 1, date);\n        const [birthYear, birthMonth, birthDate] = normalizeDateStr(astrolabe.solarDate);\n        const birthday = new Date(birthYear, birthMonth - 1, birthDate);\n        switch (scope) {\n            case \"hourly\":\n                if (horoscopeHour + value > 11) {\n                    dt.setDate(dt.getDate() + 1);\n                }\n                else if (horoscopeHour + value < 0) {\n                    dt.setDate(dt.getDate() - 1);\n                }\n                break;\n            case \"daily\":\n                dt.setDate(dt.getDate() + value);\n                break;\n            case \"monthly\":\n                dt.setMonth(dt.getMonth() + value);\n                break;\n            case \"yearly\":\n            case \"decadal\":\n                dt.setFullYear(dt.getFullYear() + value);\n                break;\n        }\n        if (dt.getTime() < birthday.getTime()) {\n            return true;\n        }\n        return false;\n    }, [horoscopeHour, astrolabe]);\n    return (React.createElement(\"div\", { className: classNames(\"iztro-center-palace\", {\n            \"iztro-center-palace-centralize\": centerPalaceAlign,\n        }) },\n        astrolabe?.earthlyBranchOfSoulPalace && (React.createElement(Line, { scope: arrowScope, index: arrowIndex ??\n                fixEarthlyBranchIndex(astrolabe.earthlyBranchOfSoulPalace) })),\n        React.createElement(\"h3\", { className: \"center-title\" },\n            React.createElement(\"span\", { className: `gender gender-${kot(astrolabe?.gender ?? \"\")}` }, kot(astrolabe?.gender ?? \"\") === \"male\" ? \"♂\" : \"♀\"),\n            React.createElement(\"span\", null, \"\\u57FA\\u672C\\u4FE1\\u606F\")),\n        React.createElement(\"ul\", { className: \"basic-info\" }, records.map((rec, idx) => (React.createElement(Item, { key: idx, ...rec })))),\n        React.createElement(\"h3\", { className: \"center-title\" }, \"\\u8FD0\\u9650\\u4FE1\\u606F\"),\n        React.createElement(\"ul\", { className: \"basic-info\" },\n            React.createElement(Item, { title: \"\\u519C\\u5386\\uFF1A\", content: horoDate.lunar }),\n            React.createElement(\"div\", { className: classNames(\"solar-horoscope\", {\n                    \"solar-horoscope-centralize\": centerPalaceAlign,\n                }) },\n                React.createElement(Item, { title: \"\\u9633\\u5386\\uFF1A\", content: horoDate.solar }),\n                React.createElement(\"span\", { className: \"today\", onClick: () => setHoroscopeDate?.(new Date()) }, \"\\u4ECA\"))),\n        React.createElement(\"div\", { className: \"horo-buttons\" },\n            React.createElement(\"span\", { className: classNames(\"center-button\", {\n                    disabled: shouldBeDisabled(horoDate.solar, \"yearly\", -10),\n                }), onClick: () => onHoroscopeButtonClicked(\"yearly\", -10) }, \"\\u25C0\\u9650\"),\n            React.createElement(\"span\", { className: classNames(\"center-button\", {\n                    disabled: shouldBeDisabled(horoDate.solar, \"yearly\", -1),\n                }), onClick: () => onHoroscopeButtonClicked(\"yearly\", -1) }, \"\\u25C0\\u5E74\"),\n            React.createElement(\"span\", { className: classNames(\"center-button\", {\n                    disabled: shouldBeDisabled(horoDate.solar, \"monthly\", -1),\n                }), onClick: () => onHoroscopeButtonClicked(\"monthly\", -1) }, \"\\u25C0\\u6708\"),\n            React.createElement(\"span\", { className: classNames(\"center-button\", {\n                    disabled: shouldBeDisabled(horoDate.solar, \"daily\", -1),\n                }), onClick: () => onHoroscopeButtonClicked(\"daily\", -1) }, \"\\u25C0\\u65E5\"),\n            React.createElement(\"span\", { className: classNames(\"center-button\", {\n                    disabled: shouldBeDisabled(horoDate.solar, \"hourly\", -1),\n                }), onClick: () => onHoroscopeButtonClicked(\"hourly\", -1) }, \"\\u25C0\\u65F6\"),\n            React.createElement(\"span\", { className: \"center-horo-hour\" }, t(CHINESE_TIME[horoscopeHour])),\n            React.createElement(\"span\", { className: classNames(\"center-button\"), onClick: () => onHoroscopeButtonClicked(\"hourly\", 1) }, \"\\u65F6\\u25B6\"),\n            React.createElement(\"span\", { className: classNames(\"center-button\"), onClick: () => onHoroscopeButtonClicked(\"daily\", 1) }, \"\\u65E5\\u25B6\"),\n            React.createElement(\"span\", { className: classNames(\"center-button\"), onClick: () => onHoroscopeButtonClicked(\"monthly\", 1) }, \"\\u6708\\u25B6\"),\n            React.createElement(\"span\", { className: classNames(\"center-button\"), onClick: () => onHoroscopeButtonClicked(\"yearly\", 1) }, \"\\u5E74\\u25B6\"),\n            React.createElement(\"span\", { className: classNames(\"center-button\"), onClick: () => onHoroscopeButtonClicked(\"yearly\", 10) }, \"\\u9650\\u25B6\"))));\n};\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { Izpalace } from \"../Izpalace/Izpalace\";\nimport { IzpalaceCenter } from \"../IzpalaceCenter\";\nimport classNames from \"classnames\";\nimport { useIztro } from \"iztro-hook\";\nimport \"../styles/index.css\";\nimport { getPalaceNames } from \"iztro/lib/astro\";\nexport const Iztrolabe = (props) => {\n    const [taichiPoint, setTaichiPoint] = useState(-1);\n    const [taichiPalaces, setTaichiPalaces] = useState();\n    const [activeHeavenlyStem, setActiveHeavenlyStem] = useState();\n    const [hoverHeavenlyStem, setHoverHeavenlyStem] = useState();\n    const [focusedIndex, setFocusedIndex] = useState();\n    const [showDecadal, setShowDecadal] = useState(false);\n    const [showYearly, setShowYearly] = useState(false);\n    const [showMonthly, setShowMonthly] = useState(false);\n    const [showDaily, setShowDaily] = useState(false);\n    const [showHourly, setShowShowHourly] = useState(false);\n    const [horoscopeDate, setHoroscopeDate] = useState();\n    const [horoscopeHour, setHoroscopeHour] = useState();\n    const { astrolabe, horoscope, setHoroscope } = useIztro({\n        birthday: props.birthday,\n        birthTime: props.birthTime,\n        gender: props.gender,\n        birthdayType: props.birthdayType,\n        fixLeap: props.fixLeap,\n        isLeapMonth: props.isLeapMonth,\n        lang: props.lang,\n        astroType: props.astroType,\n        options: props.options,\n    });\n    const toggleShowScope = (scope) => {\n        switch (scope) {\n            case \"decadal\":\n                setShowDecadal(!showDecadal);\n                break;\n            case \"yearly\":\n                setShowYearly(!showYearly);\n                break;\n            case \"monthly\":\n                setShowMonthly(!showMonthly);\n                break;\n            case \"daily\":\n                setShowDaily(!showDaily);\n                break;\n            case \"hourly\":\n                setShowShowHourly(!showHourly);\n                break;\n        }\n    };\n    const toggleActiveHeavenlyStem = (heavenlyStem) => {\n        if (heavenlyStem === activeHeavenlyStem) {\n            setActiveHeavenlyStem(undefined);\n        }\n        else {\n            setActiveHeavenlyStem(heavenlyStem);\n        }\n    };\n    const dynamic = useMemo(() => {\n        if (showHourly) {\n            return {\n                arrowIndex: horoscope?.hourly.index,\n                arrowScope: \"hourly\",\n            };\n        }\n        if (showDaily) {\n            return {\n                arrowIndex: horoscope?.daily.index,\n                arrowScope: \"daily\",\n            };\n        }\n        if (showMonthly) {\n            return {\n                arrowIndex: horoscope?.monthly.index,\n                arrowScope: \"monthly\",\n            };\n        }\n        if (showYearly) {\n            return {\n                arrowIndex: horoscope?.yearly.index,\n                arrowScope: \"yearly\",\n            };\n        }\n        if (showDecadal) {\n            return {\n                arrowIndex: horoscope?.decadal.index,\n                arrowScope: \"decadal\",\n            };\n        }\n    }, [showDecadal, showYearly, showMonthly, showDaily, showHourly, horoscope]);\n    useEffect(() => {\n        setHoroscopeDate(props.horoscopeDate ?? new Date());\n        setHoroscopeHour(props.horoscopeHour ?? 0);\n    }, [props.horoscopeDate, props.horoscopeHour]);\n    useEffect(() => {\n        setHoroscope(horoscopeDate ?? new Date(), horoscopeHour);\n    }, [horoscopeDate, horoscopeHour]);\n    useEffect(() => {\n        if (taichiPoint < 0) {\n            setTaichiPalaces(undefined);\n        }\n        else {\n            const palaces = getPalaceNames(taichiPoint);\n            setTaichiPalaces(palaces);\n        }\n    }, [taichiPoint]);\n    const toggleTaichiPoint = (index) => {\n        if (taichiPoint === index) {\n            setTaichiPoint(-1);\n        }\n        else {\n            setTaichiPoint(index);\n        }\n    };\n    return (React.createElement(\"div\", { className: classNames(\"iztro-astrolabe\", \"iztro-astrolabe-theme-default\") },\n        astrolabe?.palaces.map((palace) => {\n            return (React.createElement(Izpalace, { key: palace.earthlyBranch, focusedIndex: focusedIndex, onFocused: setFocusedIndex, horoscope: horoscope, showDecadalScope: showDecadal, showYearlyScope: showYearly, showMonthlyScope: showMonthly, showDailyScope: showDaily, showHourlyScope: showHourly, taichiPalace: taichiPalaces?.[palace.index], toggleScope: toggleShowScope, activeHeavenlyStem: activeHeavenlyStem, toggleActiveHeavenlyStem: toggleActiveHeavenlyStem, hoverHeavenlyStem: hoverHeavenlyStem, setHoverHeavenlyStem: setHoverHeavenlyStem, toggleTaichiPoint: toggleTaichiPoint, ...palace }));\n        }),\n        React.createElement(IzpalaceCenter, { astrolabe: astrolabe, horoscope: horoscope, horoscopeDate: horoscopeDate, horoscopeHour: horoscopeHour, setHoroscopeDate: setHoroscopeDate, setHoroscopeHour: setHoroscopeHour, centerPalaceAlign: props.centerPalaceAlign, ...dynamic })));\n};\n","import React, { useRef, useEffect } from 'react';\nimport '../styles/index.css';\nexport const SegmentedControl = ({ name, options, value, onChange }) => {\n    const controlRef = useRef(null);\n    const sliderRef = useRef(null);\n    // 防止移动端点击时页面滚动和元素上移，但不影响点击功能\n    const handleTouchStart = (e) => {\n        // 只阻止多点触控的默认行为，防止页面缩放\n        if (e.touches.length > 1) {\n            e.preventDefault();\n        }\n        // 阻止事件冒泡，防止父元素的滚动行为\n        e.stopPropagation();\n        // 记录触摸开始位置，用于判断是否为点击操作\n        const touch = e.touches[0];\n        e.currentTarget.dataset.touchStartX = touch.clientX.toString();\n        e.currentTarget.dataset.touchStartY = touch.clientY.toString();\n    };\n    // 防止移动端点击时页面滚动和元素上移，但不影响点击功能\n    const handleTouchMove = (e) => {\n        // 只阻止多点触控的默认行为，防止页面缩放\n        if (e.touches.length > 1) {\n            e.preventDefault();\n        }\n        // 获取触摸开始位置\n        const touchStartX = parseFloat(e.currentTarget.dataset.touchStartX || '0');\n        const touchStartY = parseFloat(e.currentTarget.dataset.touchStartY || '0');\n        // 计算触摸移动距离\n        const touch = e.touches[0];\n        const deltaX = Math.abs(touch.clientX - touchStartX);\n        const deltaY = Math.abs(touch.clientY - touchStartY);\n        // 如果移动距离超过阈值，则认为是滑动操作，阻止默认行为\n        if (deltaX > 5 || deltaY > 5) {\n            e.preventDefault();\n        }\n        // 阻止事件冒泡，防止父元素的滚动行为\n        e.stopPropagation();\n    };\n    // 防止移动端点击时页面滚动和元素上移，但不影响点击功能\n    const handleTouchEnd = (e) => {\n        // 阻止事件冒泡，防止父元素的滚动行为\n        e.stopPropagation();\n        // 清除触摸开始位置记录\n        delete e.currentTarget.dataset.touchStartX;\n        delete e.currentTarget.dataset.touchStartY;\n    };\n    useEffect(() => {\n        if (!controlRef.current)\n            return;\n        const activeElement = controlRef.current.querySelector('.segmented-control-input:checked');\n        if (!activeElement)\n            return;\n        const buttonElement = activeElement.nextElementSibling;\n        if (!buttonElement || !sliderRef.current)\n            return;\n        // 使用 requestAnimationFrame 确保在浏览器重绘后计算位置\n        const updateSliderPosition = () => {\n            if (!controlRef.current)\n                return;\n            const buttonRect = buttonElement.getBoundingClientRect();\n            const controlRect = controlRef.current.getBoundingClientRect();\n            // 直接设置滑块样式，而不是使用状态\n            sliderRef.current.style.width = `${buttonRect.width}px`;\n            sliderRef.current.style.left = `${buttonRect.left - controlRect.left}px`;\n            sliderRef.current.style.opacity = '1';\n        };\n        // 立即更新一次\n        updateSliderPosition();\n        // 使用 requestAnimationFrame 确保在下一帧再次更新，处理可能的布局变化\n        const animationId = requestAnimationFrame(updateSliderPosition);\n        // 添加 resize 监听器，处理窗口大小变化\n        const resizeObserver = new ResizeObserver(() => {\n            updateSliderPosition();\n        });\n        resizeObserver.observe(controlRef.current);\n        // 清理函数\n        return () => {\n            cancelAnimationFrame(animationId);\n            resizeObserver.disconnect();\n        };\n    }, [value, options]);\n    // 处理按钮点击事件，防止移动端的默认行为\n    const handleButtonClick = (optionValue) => (e) => {\n        // 阻止事件冒泡和默认行为\n        e.preventDefault();\n        e.stopPropagation();\n        // 调用 onChange 回调\n        onChange(optionValue);\n    };\n    return (React.createElement(\"div\", { className: \"segmented-control\", ref: controlRef, onTouchStart: handleTouchStart, onTouchMove: handleTouchMove, onTouchEnd: handleTouchEnd },\n        React.createElement(\"div\", { className: \"segmented-control-slider\", ref: sliderRef }),\n        options.map((option) => (React.createElement(\"label\", { key: option.value, className: \"segmented-control-label\" },\n            React.createElement(\"input\", { type: \"radio\", name: name, value: option.value, checked: value === option.value, onChange: () => onChange(option.value), className: \"segmented-control-input\" }),\n            React.createElement(\"span\", { className: \"segmented-control-button\", onClick: handleButtonClick(option.value), onTouchEnd: handleButtonClick(option.value) }, option.label))))));\n};\n","import React, { useState, lazy, Suspense, useEffect, useRef } from 'react';\nimport { Iztrolabe } from '../Iztrolabe';\nimport { SegmentedControl } from '../SegmentedControl/SegmentedControl';\nimport { AIChatProvider, useAIChat } from '../AIChat/AIChatContext';\n// Lazy loading components\nconst AIChat = lazy(() => import(\"../AIChat\").then(module => ({ default: module.AIChat })));\nconst BackgroundAIIndicator = lazy(() => import(\"../AIChat/BackgroundAIIndicator\"));\nconst HistoryPanel = lazy(() => import(\"../AIChat/components/HistoryPanel\"));\n/**\n * Internal component that contains the main UI and logic,\n * and has access to the AIChatContext.\n */\nconst ResultContainerWithHistory = ({ chartMode, formData, synastryData, astrolabe, astrolabe1, astrolabe2, onShowInputPanel, }) => {\n    const [activeTab, setActiveTab] = useState(\"ai\");\n    const { createSession, sessions, activeSessionId, switchSession, model, setModel } = useAIChat();\n    const isInitialMount = useRef(true);\n    // Create a new session when chart data changes (re-charting)\n    useEffect(() => {\n        // Skip the very first render\n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            // If no sessions exist on first load (from localStorage), create one.\n            if (sessions.length === 0) {\n                createSession();\n            }\n            return;\n        }\n        // On subsequent changes to chart data, create a new session\n        createSession();\n        setActiveTab('ai'); // Switch to AI tab to show the new chat\n    }, [formData, synastryData]);\n    const handleNewSession = () => {\n        createSession();\n        setActiveTab('ai');\n    };\n    return (React.createElement(\"div\", { className: \"result-section\" },\n        React.createElement(\"div\", { className: \"tab-navigation\" },\n            React.createElement(\"div\", { className: \"tab-navigation-spacer\" }),\n            React.createElement(\"div\", { className: \"tab-navigation-center\" },\n                React.createElement(SegmentedControl, { name: \"activeTab\", options: [\n                        { label: \"星盘\", value: \"astrolabe\" },\n                        { label: \"AI 解读\", value: \"ai\" },\n                        { label: \"历史\", value: \"history\" },\n                    ], value: activeTab, onChange: (value) => setActiveTab(value) })),\n            React.createElement(\"div\", { className: \"tab-navigation-actions\" },\n                React.createElement(\"button\", { onClick: handleNewSession, className: \"new-chat-button\", \"aria-label\": \"\\u65B0\\u5EFA\\u8BB0\\u5F55\" },\n                    React.createElement(\"svg\", { width: \"22\", height: \"22\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n                        React.createElement(\"path\", { d: \"M14.5 2H6C4.89543 2 4 2.89543 4 4V20C4 21.1046 4.89543 22 6 22H18C19.1046 22 20 21.1046 20 20V7.5L14.5 2Z\", stroke: \"currentColor\", strokeWidth: \"2\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }),\n                        React.createElement(\"path\", { d: \"M14 2V8H20\", stroke: \"currentColor\", strokeWidth: \"2\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }),\n                        React.createElement(\"path\", { d: \"M12 18V12\", stroke: \"currentColor\", strokeWidth: \"2\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }),\n                        React.createElement(\"path\", { d: \"M9 15H15\", stroke: \"currentColor\", strokeWidth: \"2\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }))),\n                React.createElement(Suspense, { fallback: null },\n                    React.createElement(BackgroundAIIndicator, null)))),\n        React.createElement(\"div\", { className: \"tab-content\" },\n            activeTab === \"astrolabe\" && (React.createElement(\"div\", { className: \"astrolabe-content\" },\n                React.createElement(\"div\", { className: \"astrolabe-container\" },\n                    chartMode === \"single\" ? (React.createElement(Iztrolabe, { birthday: `${formData.year}-${String(formData.month).padStart(2, '0')}-${String(formData.day).padStart(2, '0')}`, birthTime: formData.birthTime, birthdayType: formData.birthdayType, gender: formData.gender })) : (React.createElement(\"div\", { className: \"synastry-container\" },\n                        React.createElement(\"div\", { className: \"synastry-person\" },\n                            React.createElement(\"h3\", null, synastryData.person1.name || \"第一个人\"),\n                            React.createElement(Iztrolabe, { birthday: `${synastryData.person1.year}-${String(synastryData.person1.month).padStart(2, '0')}-${String(synastryData.person1.day).padStart(2, '0')}`, birthTime: synastryData.person1.birthTime, birthdayType: synastryData.person1.birthdayType, gender: synastryData.person1.gender })),\n                        React.createElement(\"div\", { className: \"synastry-person\" },\n                            React.createElement(\"h3\", null, synastryData.person2.name || \"第二个人\"),\n                            React.createElement(Iztrolabe, { birthday: `${synastryData.person2.year}-${String(synastryData.person2.month).padStart(2, '0')}-${String(synastryData.person2.day).padStart(2, '0')}`, birthTime: synastryData.person2.birthTime, birthdayType: synastryData.person2.birthdayType, gender: synastryData.person2.gender })))),\n                    React.createElement(\"div\", { className: \"rechart-button-container\" },\n                        React.createElement(\"button\", { onClick: onShowInputPanel, className: \"rechart-button\" }, chartMode === \"single\" ? \"重新排盘\" : \"重新合盘\"))))),\n            React.createElement(\"div\", { className: `ai-content ${activeTab === \"ai\" ? \"visible\" : \"hidden\"}` },\n                React.createElement(Suspense, { fallback: React.createElement(\"div\", { className: \"loading-indicator\" }, \"\\u52A0\\u8F7DAI\\u804A\\u5929\\u529F\\u80FD\\u4E2D...\") },\n                    React.createElement(AIChat, { formData: formData, astrolabe: chartMode === \"single\" ? astrolabe : astrolabe1, synastryAstrolabe: chartMode === \"synastry\" ? astrolabe2 : undefined, isSynastryMode: chartMode === \"synastry\", personNames: {\n                            person1: synastryData.person1.name || \"第一个人\",\n                            person2: synastryData.person2.name || \"第二个人\"\n                        }, isVisible: activeTab === \"ai\" && !!activeSessionId }))),\n            activeTab === \"history\" && (React.createElement(Suspense, { fallback: React.createElement(\"div\", { className: \"loading-indicator\" }, \"\\u52A0\\u8F7D\\u5386\\u53F2\\u8BB0\\u5F55\\u4E2D...\") },\n                React.createElement(HistoryPanel, { onSelectSession: () => setActiveTab('ai') }))))));\n};\n/**\n * Main container component that provides the AI Chat context\n * and renders the UI.\n */\nexport const ResultContainer = (props) => {\n    return (React.createElement(AIChatProvider, null,\n        React.createElement(ResultContainerWithHistory, { ...props })));\n};\nexport default ResultContainer;\n","/**\n * 云存储服务类，用于与 Cloudflare Worker + KV 交互\n */\nexport class CloudStorageService {\n    /**\n     * 初始化方法，在类加载时调用\n     */\n    static initialize() {\n        // 不需要在初始化时做任何事\n    }\n    /**\n     * 检查是否已认证\n     * @returns 是否已认证\n     */\n    static isAuth() {\n        const cloudEnabled = localStorage.getItem(this.CLOUD_ENABLED_KEY);\n        return cloudEnabled === 'true';\n    }\n    /**\n     * 验证密码\n     * @param password 要验证的密码\n     * @returns 是否验证成功\n     */\n    static async authenticate(password) {\n        try {\n            // 直接比较硬编码的密码\n            if (password === this.CLOUD_PASSWORD) {\n                // 保存云存储开关状态到本地\n                localStorage.setItem(this.CLOUD_ENABLED_KEY, 'true');\n                return true;\n            }\n            // 清除云存储开关状态\n            localStorage.removeItem(this.CLOUD_ENABLED_KEY);\n            return false;\n        }\n        catch (error) {\n            console.error('密码验证失败:', error);\n            return false;\n        }\n    }\n    /**\n     * 清除认证状态\n     */\n    static clearAuthentication() {\n        // 清除云存储开关状态\n        localStorage.removeItem(this.CLOUD_ENABLED_KEY);\n    }\n    /**\n     * 上传单个历史记录到云存储\n     * @param item 历史记录项\n     * @returns 上传是否成功\n     */\n    static async uploadHistoryItem(item) {\n        if (!this.isAuth()) {\n            throw new Error('未认证，请先输入密码');\n        }\n        try {\n            console.log('上传历史记录项:', item);\n            const response = await fetch(`${this.WORKER_URL}/api/history/item`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.CLOUD_PASSWORD}`,\n                },\n                body: JSON.stringify({ item }),\n            });\n            if (!response.ok) {\n                throw new Error(`上传失败: ${response.status} ${response.statusText}`);\n            }\n            const result = await response.json();\n            console.log('上传历史记录项结果:', result);\n            return result.success;\n        }\n        catch (error) {\n            console.error('上传历史记录项失败:', error);\n            throw error;\n        }\n    }\n    /**\n     * 从云存储下载单个历史记录\n     * @param id 历史记录ID\n     * @returns 历史记录项\n     */\n    static async downloadHistoryItem(id) {\n        if (!this.isAuth()) {\n            throw new Error('未认证，请先输入密码');\n        }\n        try {\n            const response = await fetch(`${this.WORKER_URL}/api/history/item/${id}`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${this.CLOUD_PASSWORD}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error(`下载失败: ${response.status} ${response.statusText}`);\n            }\n            const result = await response.json();\n            return result.item;\n        }\n        catch (error) {\n            console.error('下载历史记录项失败:', error);\n            throw error;\n        }\n    }\n    /**\n     * 从云存储删除单个历史记录\n     * @param id 历史记录ID\n     * @returns 删除是否成功\n     */\n    static async deleteHistoryItem(id) {\n        if (!this.isAuth()) {\n            throw new Error('未认证，请先输入密码');\n        }\n        try {\n            const response = await fetch(`${this.WORKER_URL}/api/history/item/${id}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${this.CLOUD_PASSWORD}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error(`删除失败: ${response.status} ${response.statusText}`);\n            }\n            const result = await response.json();\n            return result.success;\n        }\n        catch (error) {\n            console.error('删除历史记录项失败:', error);\n            throw error;\n        }\n    }\n    /**\n     * 获取所有历史记录ID列表\n     * @returns 历史记录ID数组\n     */\n    static async getHistoryIds() {\n        if (!this.isAuth()) {\n            throw new Error('未认证，请先输入密码');\n        }\n        try {\n            console.log('获取历史记录ID列表...');\n            const response = await fetch(`${this.WORKER_URL}/api/history/ids`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${this.CLOUD_PASSWORD}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error(`获取ID列表失败: ${response.status} ${response.statusText}`);\n            }\n            const result = await response.json();\n            console.log('获取到的ID列表结果:', result);\n            console.log('ID列表:', result.ids);\n            return result.ids || [];\n        }\n        catch (error) {\n            console.error('获取历史记录ID列表失败:', error);\n            throw error;\n        }\n    }\n    /**\n     * 批量获取历史记录\n     * @param ids 历史记录ID数组\n     * @returns 历史记录数组\n     */\n    static async batchDownloadHistoryItems(ids) {\n        if (!this.isAuth()) {\n            throw new Error('未认证，请先输入密码');\n        }\n        try {\n            console.log('批量下载历史记录，IDs:', ids);\n            const response = await fetch(`${this.WORKER_URL}/api/history/batch`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.CLOUD_PASSWORD}`,\n                },\n                body: JSON.stringify({ ids }),\n            });\n            if (!response.ok) {\n                throw new Error(`批量下载失败: ${response.status} ${response.statusText}`);\n            }\n            const result = await response.json();\n            console.log('从云端获取的原始数据:', result);\n            console.log('从云端获取的历史记录项:', result.items);\n            return result.items || [];\n        }\n        catch (error) {\n            console.error('批量下载历史记录失败:', error);\n            throw error;\n        }\n    }\n    /**\n     * 清空所有历史记录\n     * @returns 清空是否成功\n     */\n    static async clearAllHistory() {\n        if (!this.isAuth()) {\n            throw new Error('未认证，请先输入密码');\n        }\n        try {\n            const response = await fetch(`${this.WORKER_URL}/api/history/clear`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${this.CLOUD_PASSWORD}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error(`清空失败: ${response.status} ${response.statusText}`);\n            }\n            const result = await response.json();\n            return result.success;\n        }\n        catch (error) {\n            console.error('清空历史记录失败:', error);\n            throw error;\n        }\n    }\n    /**\n     * 检查网络连接状态\n     * @returns 是否在线\n     */\n    static async isOnline() {\n        try {\n            const response = await fetch(`${this.WORKER_URL}/api/health`, {\n                method: 'GET',\n                mode: 'no-cors',\n                cache: 'no-cache'\n            });\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n}\nCloudStorageService.WORKER_URL = 'https://ziwei.sydf.cc'; // 需要替换为实际的 Worker URL\nCloudStorageService.CLOUD_PASSWORD = 'ovo'; // 硬编码的云存储密码\nCloudStorageService.CLOUD_ENABLED_KEY = 'iztro_cloud_enabled'; // 云存储开关状态键\n","/**\n * 导入云存储服务\n */\nimport { CloudStorageService } from './cloudStorage';\n/**\n * 历史记录管理工具\n */\nexport class HistoryManager {\n    /**\n     * 初始化方法，在类加载时调用\n     */\n    static initialize() {\n        // 初始化云存储服务\n        CloudStorageService.initialize();\n        // 检查云存储是否已启用\n        this.isCloudEnabled = CloudStorageService.isAuth();\n    }\n    /**\n     * 启用云存储\n     * @param password 云存储密码\n     * @returns 是否启用成功\n     */\n    static async enableCloudStorage(password) {\n        try {\n            const isAuthenticated = await CloudStorageService.authenticate(password);\n            if (isAuthenticated) {\n                this.isCloudEnabled = true;\n                return true;\n            }\n            return false;\n        }\n        catch (error) {\n            console.error('启用云存储失败:', error);\n            return false;\n        }\n    }\n    /**\n     * 检查云存储是否已启用\n     * @returns 云存储是否已启用\n     */\n    static isCloudStorageEnabled() {\n        // 动态检查云存储状态，确保页面刷新后能正确恢复\n        this.isCloudEnabled = CloudStorageService.isAuth();\n        return this.isCloudEnabled;\n    }\n    /**\n     * 禁用云存储\n     */\n    static disableCloudStorage() {\n        this.isCloudEnabled = false;\n        CloudStorageService.clearAuthentication();\n    }\n    /**\n     * 从云端加载历史记录到本地\n     */\n    static async loadHistoryFromCloud() {\n        // 动态检查云存储状态\n        if (!this.isCloudStorageEnabled())\n            return;\n        try {\n            console.log('开始从云端加载历史记录...');\n            // 获取所有历史记录ID\n            const ids = await CloudStorageService.getHistoryIds();\n            console.log('获取到的历史记录ID列表:', ids);\n            if (ids.length === 0) {\n                console.log('云端没有历史记录');\n                return;\n            }\n            // 批量获取历史记录\n            const cloudHistory = await CloudStorageService.batchDownloadHistoryItems(ids);\n            console.log('从云端获取的历史记录:', cloudHistory);\n            console.log('历史记录数量:', cloudHistory.length);\n            // 检查每条记录的格式\n            cloudHistory.forEach((item, index) => {\n                console.log(`记录 ${index}:`, item);\n                console.log(`记录 ${index} 的类型:`, typeof item);\n                console.log(`记录 ${index} 的键:`, Object.keys(item));\n            });\n            // 获取本地历史记录\n            const localHistory = this.getHistory();\n            console.log('本地历史记录:', localHistory);\n            // 合并本地和云端的历史记录\n            const mergedHistory = this.mergeHistories(localHistory, cloudHistory);\n            console.log('合并后的历史记录:', mergedHistory);\n            // 限制历史记录数量，最多保存50条\n            if (mergedHistory.length > 50) {\n                mergedHistory.splice(50);\n            }\n            localStorage.setItem(this.STORAGE_KEY, JSON.stringify(mergedHistory));\n            console.log('历史记录已保存到本地');\n        }\n        catch (error) {\n            console.error('从云端加载历史记录失败:', error);\n        }\n    }\n    /**\n     * 保存历史记录到云端\n     */\n    static async saveHistoryToCloud() {\n        if (!this.isCloudEnabled)\n            return;\n        try {\n            const history = this.getHistory();\n            // 上传每个历史记录\n            for (const item of history) {\n                await CloudStorageService.uploadHistoryItem(item);\n            }\n        }\n        catch (error) {\n            console.error('保存历史记录到云端失败:', error);\n        }\n    }\n    /**\n     * 合并本地和云端的历史记录\n     * @param localHistory 本地历史记录\n     * @param cloudHistory 云端历史记录\n     * @returns 合并后的历史记录\n     */\n    static mergeHistories(localHistory, cloudHistory) {\n        console.log('开始合并历史记录...');\n        console.log('本地历史记录数量:', localHistory.length);\n        console.log('云端历史记录数量:', cloudHistory.length);\n        const mergedMap = new Map();\n        // 先添加云端历史记录\n        cloudHistory.forEach(item => {\n            mergedMap.set(item.id, item);\n            console.log('添加云端记录:', item.id);\n        });\n        // 再添加本地历史记录，如果ID相同则保留时间戳较新的\n        localHistory.forEach(item => {\n            const existingItem = mergedMap.get(item.id);\n            if (!existingItem) {\n                mergedMap.set(item.id, item);\n                console.log('添加本地记录（云端不存在）:', item.id);\n            }\n            else if (item.timestamp > existingItem.timestamp) {\n                mergedMap.set(item.id, item);\n                console.log('更新记录（本地版本更新）:', item.id);\n            }\n            else {\n                console.log('跳过本地记录（云端版本更新）:', item.id);\n            }\n        });\n        // 转换为数组并按时间戳降序排序\n        const mergedHistory = Array.from(mergedMap.values()).sort((a, b) => b.timestamp - a.timestamp);\n        console.log('合并后的历史记录数量:', mergedHistory.length);\n        return mergedHistory;\n    }\n    /**\n     * 保存历史记录到本地存储，如果云存储已启用则同步到云端\n     * @param item 历史记录项\n     */\n    static async saveHistory(item) {\n        try {\n            const history = this.getHistory();\n            const newHistoryItem = {\n                ...item,\n                id: this.generateId(),\n                timestamp: Date.now(),\n            };\n            // 添加到历史记录开头\n            history.unshift(newHistoryItem);\n            // 限制历史记录数量，最多保存50条\n            if (history.length > 50) {\n                history.splice(50);\n            }\n            localStorage.setItem(this.STORAGE_KEY, JSON.stringify(history));\n            // 动态检查云存储状态，如果已启用则保存到云端\n            if (this.isCloudStorageEnabled()) {\n                await CloudStorageService.uploadHistoryItem(newHistoryItem);\n            }\n        }\n        catch (error) {\n            console.error('保存历史记录失败:', error);\n        }\n    }\n    /**\n     * 从本地存储获取历史记录\n     * @returns 历史记录数组\n     */\n    static getHistory() {\n        try {\n            const historyJson = localStorage.getItem(this.STORAGE_KEY);\n            return historyJson ? JSON.parse(historyJson) : [];\n        }\n        catch (error) {\n            console.error('获取历史记录失败:', error);\n            return [];\n        }\n    }\n    /**\n     * 获取历史记录（如果启用了云存储，会自动从云端加载）\n     * @returns 历史记录数组\n     */\n    static async getHistoryWithCloudSync() {\n        // 动态检查云存储状态\n        const isCloudEnabled = this.isCloudStorageEnabled();\n        console.log('getHistoryWithCloudSync 被调用，云存储状态:', isCloudEnabled);\n        // 如果云存储已启用，从云端加载\n        if (isCloudEnabled) {\n            console.log('开始从云端加载历史记录...');\n            await this.loadHistoryFromCloud();\n        }\n        else {\n            console.log('云存储未启用，只返回本地历史记录');\n        }\n        const localHistory = this.getHistory();\n        console.log('返回的历史记录:', localHistory);\n        return localHistory;\n    }\n    /**\n     * 更新指定ID的历史记录\n     * @param id 历史记录ID\n     * @param updatedItem 更新后的历史记录数据\n     */\n    static async updateHistory(id, updatedItem) {\n        try {\n            const history = this.getHistory();\n            const itemIndex = history.findIndex(item => item.id === id);\n            if (itemIndex === -1) {\n                console.error('未找到要更新的历史记录:', id);\n                return;\n            }\n            // 更新历史记录，保留原有的ID和时间戳\n            history[itemIndex] = {\n                ...updatedItem,\n                id: id,\n                timestamp: history[itemIndex].timestamp,\n            };\n            localStorage.setItem(this.STORAGE_KEY, JSON.stringify(history));\n            // 动态检查云存储状态，如果已启用则更新云端记录\n            if (this.isCloudStorageEnabled()) {\n                // 先删除云端记录，再上传更新后的记录\n                await CloudStorageService.deleteHistoryItem(id);\n                await CloudStorageService.uploadHistoryItem(history[itemIndex]);\n            }\n        }\n        catch (error) {\n            console.error('更新历史记录失败:', error);\n        }\n    }\n    /**\n     * 删除指定ID的历史记录\n     * @param id 历史记录ID\n     */\n    static async deleteHistory(id) {\n        try {\n            const history = this.getHistory();\n            const filteredHistory = history.filter(item => item.id !== id);\n            localStorage.setItem(this.STORAGE_KEY, JSON.stringify(filteredHistory));\n            // 动态检查云存储状态，如果已启用则删除云端记录\n            if (this.isCloudStorageEnabled()) {\n                await CloudStorageService.deleteHistoryItem(id);\n            }\n        }\n        catch (error) {\n            console.error('删除历史记录失败:', error);\n        }\n    }\n    /**\n     * 清空所有历史记录\n     */\n    static async clearHistory() {\n        try {\n            localStorage.removeItem(this.STORAGE_KEY);\n            // 动态检查云存储状态，如果已启用则清空云端记录\n            if (this.isCloudStorageEnabled()) {\n                await CloudStorageService.clearAllHistory();\n            }\n        }\n        catch (error) {\n            console.error('清空历史记录失败:', error);\n        }\n    }\n    /**\n     * 生成唯一ID\n     * @returns 唯一ID字符串\n     */\n    static generateId() {\n        return Date.now().toString(36) + Math.random().toString(36).substr(2);\n    }\n    /**\n     * 格式化日期显示\n     * @param timestamp 时间戳\n     * @returns 格式化后的日期字符串\n     */\n    static formatDate(timestamp) {\n        const date = new Date(timestamp);\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    }\n}\nHistoryManager.STORAGE_KEY = 'iztro_history';\nHistoryManager.isCloudEnabled = false;\n","import { useState, useEffect, useCallback } from 'react';\nimport { HistoryManager } from '../utils/historyUtils';\nexport const useHistoryManager = () => {\n    const [history, setHistory] = useState([]);\n    const [showHistoryModal, setShowHistoryModal] = useState(false);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [showPasswordInput, setShowPasswordInput] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [isCloudStorageEnabled, setIsCloudStorageEnabled] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [editingHistoryId, setEditingHistoryId] = useState(null);\n    // 初始化历史管理器和加载历史记录\n    useEffect(() => {\n        const initializeHistory = async () => {\n            // 初始化云存储状态\n            HistoryManager.initialize();\n            console.log('useHistoryManager: 初始化历史管理器');\n            // 获取历史记录（如果启用了云存储，会自动从云端加载）\n            const history = await HistoryManager.getHistoryWithCloudSync();\n            setHistory(history);\n            setIsCloudStorageEnabled(HistoryManager.isCloudStorageEnabled());\n            console.log('useHistoryManager: 历史记录已加载，数量:', history.length);\n        };\n        initializeHistory();\n    }, []);\n    // 处理密码提交\n    const handlePasswordSubmit = useCallback(async () => {\n        if (!password.trim())\n            return;\n        setIsLoading(true);\n        try {\n            console.log('useHistoryManager: 提交密码启用云存储');\n            const success = await HistoryManager.enableCloudStorage(password);\n            if (success) {\n                console.log('useHistoryManager: 云存储启用成功，重新加载历史记录');\n                setIsCloudStorageEnabled(true);\n                setShowPasswordInput(false);\n                setPassword(\"\");\n                // 刷新历史记录（从云端加载）\n                const history = await HistoryManager.getHistoryWithCloudSync();\n                setHistory(history);\n                console.log('useHistoryManager: 历史记录已刷新，数量:', history.length);\n            }\n            else {\n                alert(\"密码错误，请重试\");\n            }\n        }\n        catch (error) {\n            console.error(\"启用云存储失败:\", error);\n            alert(\"启用云存储失败，请稍后再试\");\n        }\n        finally {\n            setIsLoading(false);\n        }\n    }, [password]);\n    // 处理历史记录保存\n    const handleSaveHistory = useCallback(async (item) => {\n        if (editingHistoryId) {\n            // 如果正在编辑，更新现有记录\n            await HistoryManager.updateHistory(editingHistoryId, item);\n            // 重置编辑状态\n            setEditingHistoryId(null);\n        }\n        else {\n            // 如果不是编辑，创建新记录\n            await HistoryManager.saveHistory(item);\n        }\n        setHistory(HistoryManager.getHistory());\n    }, [editingHistoryId]);\n    // 处理历史记录删除\n    const handleDeleteHistory = useCallback(async (id) => {\n        await HistoryManager.deleteHistory(id);\n        setHistory(HistoryManager.getHistory());\n    }, []);\n    // 处理历史记录清空\n    const handleClearHistory = useCallback(async () => {\n        if (isCloudStorageEnabled) {\n            alert(\"云存储已启用，无法清空历史记录\");\n            return;\n        }\n        if (confirm('确定要清空所有历史记录吗？')) {\n            await HistoryManager.clearHistory();\n            setHistory([]);\n        }\n    }, [isCloudStorageEnabled]);\n    // 过滤历史记录\n    const filteredHistory = history.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (item.type === 'synastry' && item.person2?.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n        `${item.year}-${item.month}-${item.day}`.includes(searchTerm));\n    return {\n        history: filteredHistory,\n        showHistoryModal,\n        setShowHistoryModal,\n        searchTerm,\n        setSearchTerm,\n        showPasswordInput,\n        setShowPasswordInput,\n        password,\n        setPassword,\n        isCloudStorageEnabled,\n        isLoading,\n        editingHistoryId,\n        setEditingHistoryId,\n        handlePasswordSubmit,\n        handleSaveHistory,\n        handleDeleteHistory,\n        handleClearHistory,\n    };\n};\n","import React from 'react';\nimport { SegmentedControl } from '../SegmentedControl/SegmentedControl';\n/**\n * 表单容器组件\n * 负责处理排盘和合盘表单的显示和交互\n */\nexport const FormContainer = ({ chartMode, setChartMode, formData, synastryData, onFormChange, onSynastryChange, onRadioChange, onSynastryRadioChange, onSubmit, onSynastrySubmit, onShowHistory, }) => {\n    const handleFormChange = (e) => {\n        const { name, value } = e.target;\n        onFormChange({\n            ...formData,\n            [name]: name === 'birthTime' ? parseInt(value) : value,\n        });\n    };\n    const handleSynastryChange = (person, e) => {\n        const { name, value } = e.target;\n        onSynastryChange(person, {\n            ...synastryData[person],\n            [name]: name === 'birthTime' ? parseInt(value) : value,\n        });\n    };\n    return (React.createElement(\"div\", { className: \"form-section\" },\n        React.createElement(\"div\", { className: \"form-group form-group-segmented\" },\n            React.createElement(SegmentedControl, { name: \"chartMode\", options: [\n                    { label: \"排盘\", value: \"single\" },\n                    { label: \"合盘\", value: \"synastry\" },\n                ], value: chartMode, onChange: (value) => setChartMode(value) })),\n        chartMode === \"single\" && (React.createElement(\"form\", { onSubmit: onSubmit },\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { htmlFor: \"name\" }, \"\\u59D3\\u540D\\uFF08\\u53EF\\u9009\\uFF09\"),\n                React.createElement(\"input\", { type: \"text\", id: \"name\", name: \"name\", value: formData.name, onChange: handleFormChange })),\n            React.createElement(\"div\", { className: \"form-group-inline form-group-inline-mobile gender-date\" },\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", null, \"\\u6027\\u522B\"),\n                    React.createElement(SegmentedControl, { name: \"gender\", options: [\n                            { label: \"男\", value: \"male\" },\n                            { label: \"女\", value: \"female\" },\n                        ], value: formData.gender, onChange: (value) => onRadioChange(\"gender\", value) })),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", null, \"\\u65E5\\u671F\\u7C7B\\u578B\"),\n                    React.createElement(SegmentedControl, { name: \"birthdayType\", options: [\n                            { label: \"阳历\", value: \"solar\" },\n                            { label: \"农历\", value: \"lunar\" },\n                        ], value: formData.birthdayType, onChange: (value) => onRadioChange(\"birthdayType\", value) }))),\n            React.createElement(\"div\", { className: \"form-group-inline form-group-inline-mobile date-fields\" },\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"year\" }, \"\\u5E74\"),\n                    React.createElement(\"input\", { type: \"number\", id: \"year\", name: \"year\", value: formData.year, onChange: handleFormChange, min: \"1900\", max: \"2100\" })),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"month\" }, \"\\u6708\"),\n                    React.createElement(\"input\", { type: \"number\", id: \"month\", name: \"month\", value: formData.month, onChange: handleFormChange, min: \"1\", max: \"12\" })),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"day\" }, \"\\u65E5\"),\n                    React.createElement(\"input\", { type: \"number\", id: \"day\", name: \"day\", value: formData.day, onChange: handleFormChange, min: \"1\", max: \"31\" }))),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { htmlFor: \"birthTime\" }, \"\\u51FA\\u751F\\u65F6\\u8FB0\"),\n                React.createElement(\"select\", { id: \"birthTime\", name: \"birthTime\", value: formData.birthTime, onChange: handleFormChange },\n                    React.createElement(\"option\", { value: 0 }, \"\\u65E9\\u5B50\\u65F6(00:00~01:00)\"),\n                    React.createElement(\"option\", { value: 1 }, \"\\u4E11\\u65F6(01:00~03:00)\"),\n                    React.createElement(\"option\", { value: 2 }, \"\\u5BC5\\u65F6(03:00~05:00)\"),\n                    React.createElement(\"option\", { value: 3 }, \"\\u536F\\u65F6(05:00~07:00)\"),\n                    React.createElement(\"option\", { value: 4 }, \"\\u8FB0\\u65F6(07:00~09:00)\"),\n                    React.createElement(\"option\", { value: 5 }, \"\\u5DF3\\u65F6(09:00~11:00)\"),\n                    React.createElement(\"option\", { value: 6 }, \"\\u5348\\u65F6(11:00~13:00)\"),\n                    React.createElement(\"option\", { value: 7 }, \"\\u672A\\u65F6(13:00~15:00)\"),\n                    React.createElement(\"option\", { value: 8 }, \"\\u7533\\u65F6(15:00~17:00)\"),\n                    React.createElement(\"option\", { value: 9 }, \"\\u9149\\u65F6(17:00~19:00)\"),\n                    React.createElement(\"option\", { value: 10 }, \"\\u620C\\u65F6(19:00~21:00)\"),\n                    React.createElement(\"option\", { value: 11 }, \"\\u4EA5\\u65F6(21:00~23:00)\"),\n                    React.createElement(\"option\", { value: 12 }, \"\\u665A\\u5B50\\u65F6(23:00~00:00)\"))),\n            React.createElement(\"button\", { type: \"submit\" }, \"\\u5F00\\u59CB\\u6392\\u76D8\"),\n            React.createElement(\"button\", { type: \"button\", className: \"history-button\", onClick: onShowHistory }, \"\\u5386\\u53F2\\u8BB0\\u5F55\"))),\n        chartMode === \"synastry\" && (React.createElement(\"form\", { onSubmit: onSynastrySubmit },\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"h3\", null, \"\\u7B2C\\u4E00\\u4E2A\\u4EBA\")),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { htmlFor: \"person1-name\" }, \"\\u59D3\\u540D\\uFF08\\u53EF\\u9009\\uFF09\"),\n                React.createElement(\"input\", { type: \"text\", id: \"person1-name\", name: \"name\", value: synastryData.person1.name, onChange: (e) => handleSynastryChange(\"person1\", e) })),\n            React.createElement(\"div\", { className: \"form-group-inline form-group-inline-mobile gender-date\" },\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", null, \"\\u6027\\u522B\"),\n                    React.createElement(SegmentedControl, { name: \"person1-gender\", options: [\n                            { label: \"男\", value: \"male\" },\n                            { label: \"女\", value: \"female\" },\n                        ], value: synastryData.person1.gender, onChange: (value) => onSynastryRadioChange(\"person1\", \"gender\", value) })),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", null, \"\\u65E5\\u671F\\u7C7B\\u578B\"),\n                    React.createElement(SegmentedControl, { name: \"person1-birthdayType\", options: [\n                            { label: \"阳历\", value: \"solar\" },\n                            { label: \"农历\", value: \"lunar\" },\n                        ], value: synastryData.person1.birthdayType, onChange: (value) => onSynastryRadioChange(\"person1\", \"birthdayType\", value) }))),\n            React.createElement(\"div\", { className: \"form-group-inline form-group-inline-mobile date-fields\" },\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"person1-year\" }, \"\\u5E74\"),\n                    React.createElement(\"input\", { type: \"number\", id: \"person1-year\", name: \"year\", value: synastryData.person1.year, onChange: (e) => handleSynastryChange(\"person1\", e), min: \"1900\", max: \"2100\" })),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"person1-month\" }, \"\\u6708\"),\n                    React.createElement(\"input\", { type: \"number\", id: \"person1-month\", name: \"month\", value: synastryData.person1.month, onChange: (e) => handleSynastryChange(\"person1\", e), min: \"1\", max: \"12\" })),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"person1-day\" }, \"\\u65E5\"),\n                    React.createElement(\"input\", { type: \"number\", id: \"person1-day\", name: \"day\", value: synastryData.person1.day, onChange: (e) => handleSynastryChange(\"person1\", e), min: \"1\", max: \"31\" }))),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { htmlFor: \"person1-birthTime\" }, \"\\u51FA\\u751F\\u65F6\\u8FB0\"),\n                React.createElement(\"select\", { id: \"person1-birthTime\", name: \"birthTime\", value: synastryData.person1.birthTime, onChange: (e) => handleSynastryChange(\"person1\", e) },\n                    React.createElement(\"option\", { value: 0 }, \"\\u65E9\\u5B50\\u65F6(00:00~01:00)\"),\n                    React.createElement(\"option\", { value: 1 }, \"\\u4E11\\u65F6(01:00~03:00)\"),\n                    React.createElement(\"option\", { value: 2 }, \"\\u5BC5\\u65F6(03:00~05:00)\"),\n                    React.createElement(\"option\", { value: 3 }, \"\\u536F\\u65F6(05:00~07:00)\"),\n                    React.createElement(\"option\", { value: 4 }, \"\\u8FB0\\u65F6(07:00~09:00)\"),\n                    React.createElement(\"option\", { value: 5 }, \"\\u5DF3\\u65F6(09:00~11:00)\"),\n                    React.createElement(\"option\", { value: 6 }, \"\\u5348\\u65F6(11:00~13:00)\"),\n                    React.createElement(\"option\", { value: 7 }, \"\\u672A\\u65F6(13:00~15:00)\"),\n                    React.createElement(\"option\", { value: 8 }, \"\\u7533\\u65F6(15:00~17:00)\"),\n                    React.createElement(\"option\", { value: 9 }, \"\\u9149\\u65F6(17:00~19:00)\"),\n                    React.createElement(\"option\", { value: 10 }, \"\\u620C\\u65F6(19:00~21:00)\"),\n                    React.createElement(\"option\", { value: 11 }, \"\\u4EA5\\u65F6(21:00~23:00)\"),\n                    React.createElement(\"option\", { value: 12 }, \"\\u665A\\u5B50\\u65F6(23:00~00:00)\"))),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"h3\", null, \"\\u7B2C\\u4E8C\\u4E2A\\u4EBA\")),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { htmlFor: \"person2-name\" }, \"\\u59D3\\u540D\\uFF08\\u53EF\\u9009\\uFF09\"),\n                React.createElement(\"input\", { type: \"text\", id: \"person2-name\", name: \"name\", value: synastryData.person2.name, onChange: (e) => handleSynastryChange(\"person2\", e) })),\n            React.createElement(\"div\", { className: \"form-group-inline form-group-inline-mobile gender-date\" },\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", null, \"\\u6027\\u522B\"),\n                    React.createElement(SegmentedControl, { name: \"person2-gender\", options: [\n                            { label: \"男\", value: \"male\" },\n                            { label: \"女\", value: \"female\" },\n                        ], value: synastryData.person2.gender, onChange: (value) => onSynastryRadioChange(\"person2\", \"gender\", value) })),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", null, \"\\u65E5\\u671F\\u7C7B\\u578B\"),\n                    React.createElement(SegmentedControl, { name: \"person2-birthdayType\", options: [\n                            { label: \"阳历\", value: \"solar\" },\n                            { label: \"农历\", value: \"lunar\" },\n                        ], value: synastryData.person2.birthdayType, onChange: (value) => onSynastryRadioChange(\"person2\", \"birthdayType\", value) }))),\n            React.createElement(\"div\", { className: \"form-group-inline form-group-inline-mobile date-fields\" },\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"person2-year\" }, \"\\u5E74\"),\n                    React.createElement(\"input\", { type: \"number\", id: \"person2-year\", name: \"year\", value: synastryData.person2.year, onChange: (e) => handleSynastryChange(\"person2\", e), min: \"1900\", max: \"2100\" })),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"person2-month\" }, \"\\u6708\"),\n                    React.createElement(\"input\", { type: \"number\", id: \"person2-month\", name: \"month\", value: synastryData.person2.month, onChange: (e) => handleSynastryChange(\"person2\", e), min: \"1\", max: \"12\" })),\n                React.createElement(\"div\", { className: \"form-group\" },\n                    React.createElement(\"label\", { htmlFor: \"person2-day\" }, \"\\u65E5\"),\n                    React.createElement(\"input\", { type: \"number\", id: \"person2-day\", name: \"day\", value: synastryData.person2.day, onChange: (e) => handleSynastryChange(\"person2\", e), min: \"1\", max: \"31\" }))),\n            React.createElement(\"div\", { className: \"form-group\" },\n                React.createElement(\"label\", { htmlFor: \"person2-birthTime\" }, \"\\u51FA\\u751F\\u65F6\\u8FB0\"),\n                React.createElement(\"select\", { id: \"person2-birthTime\", name: \"birthTime\", value: synastryData.person2.birthTime, onChange: (e) => handleSynastryChange(\"person2\", e) },\n                    React.createElement(\"option\", { value: 0 }, \"\\u65E9\\u5B50\\u65F6(00:00~01:00)\"),\n                    React.createElement(\"option\", { value: 1 }, \"\\u4E11\\u65F6(01:00~03:00)\"),\n                    React.createElement(\"option\", { value: 2 }, \"\\u5BC5\\u65F6(03:00~05:00)\"),\n                    React.createElement(\"option\", { value: 3 }, \"\\u536F\\u65F6(05:00~07:00)\"),\n                    React.createElement(\"option\", { value: 4 }, \"\\u8FB0\\u65F6(07:00~09:00)\"),\n                    React.createElement(\"option\", { value: 5 }, \"\\u5DF3\\u65F6(09:00~11:00)\"),\n                    React.createElement(\"option\", { value: 6 }, \"\\u5348\\u65F6(11:00~13:00)\"),\n                    React.createElement(\"option\", { value: 7 }, \"\\u672A\\u65F6(13:00~15:00)\"),\n                    React.createElement(\"option\", { value: 8 }, \"\\u7533\\u65F6(15:00~17:00)\"),\n                    React.createElement(\"option\", { value: 9 }, \"\\u9149\\u65F6(17:00~19:00)\"),\n                    React.createElement(\"option\", { value: 10 }, \"\\u620C\\u65F6(19:00~21:00)\"),\n                    React.createElement(\"option\", { value: 11 }, \"\\u4EA5\\u65F6(21:00~23:00)\"),\n                    React.createElement(\"option\", { value: 12 }, \"\\u665A\\u5B50\\u65F6(23:00~00:00)\"))),\n            React.createElement(\"button\", { type: \"submit\" }, \"\\u5F00\\u59CB\\u5408\\u76D8\"),\n            React.createElement(\"button\", { type: \"button\", className: \"history-button\", onClick: onShowHistory }, \"\\u5386\\u53F2\\u8BB0\\u5F55\")))));\n};\nexport default FormContainer;\n","import React, { useCallback } from 'react';\nimport { FormContainer } from '../containers/FormContainer';\nconst FormPanel = ({ chartMode, setChartMode, formData, synastryData, onFormChange, onSynastryChange, onRadioChange, onSynastryRadioChange, onShowHistory, onSubmit, onSynastrySubmit, onSaveHistory, updateUrlParams, setShowAstrolabe, setShowInputPanel, }) => {\n    const handleSubmit = useCallback((e) => {\n        e.preventDefault();\n        if (!formData.year || !formData.month || !formData.day) {\n            alert(\"请填写完整的日期信息（年、月、日）\");\n            return;\n        }\n        // 如果有姓名，保存到历史记录\n        if (formData.name.trim()) {\n            onSaveHistory({\n                ...formData,\n                type: 'single'\n            });\n        }\n        updateUrlParams(formData);\n        setShowAstrolabe(true);\n        setShowInputPanel(false);\n    }, [formData, onSaveHistory, updateUrlParams, setShowAstrolabe, setShowInputPanel]);\n    const handleSynastrySubmit = useCallback((e) => {\n        e.preventDefault();\n        if (!synastryData.person1.year || !synastryData.person1.month || !synastryData.person1.day) {\n            alert(\"请填写第一个人的完整日期信息（年、月、日）\");\n            return;\n        }\n        if (!synastryData.person2.year || !synastryData.person2.month || !synastryData.person2.day) {\n            alert(\"请填写第二个人的完整日期信息（年、月、日）\");\n            return;\n        }\n        // 如果有任意一个人的姓名，保存到历史记录\n        if (synastryData.person1.name.trim() || synastryData.person2.name.trim()) {\n            onSaveHistory({\n                ...synastryData.person1,\n                type: 'synastry',\n                person2: synastryData.person2\n            });\n        }\n        setShowAstrolabe(true);\n        setShowInputPanel(false);\n    }, [synastryData, onSaveHistory, setShowAstrolabe, setShowInputPanel]);\n    return (React.createElement(FormContainer, { chartMode: chartMode, setChartMode: setChartMode, formData: formData, synastryData: synastryData, onFormChange: onFormChange, onSynastryChange: onSynastryChange, onRadioChange: onRadioChange, onSynastryRadioChange: onSynastryRadioChange, onShowHistory: onShowHistory, onSubmit: handleSubmit, onSynastrySubmit: handleSynastrySubmit }));\n};\nexport default React.memo(FormPanel);\n","import React, { useCallback } from 'react';\nconst HistoryModal = ({ history, showHistoryModal, setShowHistoryModal, searchTerm, setSearchTerm, showPasswordInput, setShowPasswordInput, password, setPassword, isCloudStorageEnabled, isLoading, editingHistoryId, setEditingHistoryId, handlePasswordSubmit, handleDeleteHistory, handleClearHistory, onLoadHistory, onEditHistory, chartMode, }) => {\n    const handlePasswordKeyDown = useCallback((e) => {\n        if (e.key === 'Enter') {\n            handlePasswordSubmit();\n        }\n    }, [handlePasswordSubmit]);\n    if (!showHistoryModal)\n        return null;\n    return (React.createElement(\"div\", { className: \"history-modal-overlay\", onClick: () => setShowHistoryModal(false) },\n        React.createElement(\"div\", { className: \"history-modal\", onClick: (e) => e.stopPropagation() },\n            React.createElement(\"div\", { className: \"history-modal-header\" },\n                React.createElement(\"h2\", { className: \"history-title\", title: isCloudStorageEnabled ? \"云存储已启用\" : \"点击输入密码启用云存储\", onClick: () => !isCloudStorageEnabled && setShowPasswordInput(!showPasswordInput) },\n                    \"\\u5386\\u53F2\\u8BB0\\u5F55 \",\n                    isCloudStorageEnabled && \"☁️\")),\n            showPasswordInput && (React.createElement(\"div\", { className: \"history-password-container\" },\n                React.createElement(\"input\", { type: \"password\", className: \"history-password-input\", placeholder: \"\\u8F93\\u5165\\u4E91\\u5B58\\u50A8\\u5BC6\\u7801\", value: password, onChange: (e) => setPassword(e.target.value), onKeyDown: handlePasswordKeyDown, disabled: isLoading }),\n                React.createElement(\"button\", { className: \"history-password-button\", onClick: handlePasswordSubmit, disabled: isLoading || !password.trim() }, isLoading ? \"验证中...\" : \"确认\"))),\n            React.createElement(\"div\", { className: \"history-search-container\" },\n                React.createElement(\"input\", { type: \"text\", className: \"history-search-input\", placeholder: \"\\u641C\\u7D22\\u5386\\u53F2\\u8BB0\\u5F55...\", value: searchTerm, onChange: (e) => setSearchTerm(e.target.value) })),\n            React.createElement(\"div\", { className: \"history-modal-content\" }, history.length === 0 ? (React.createElement(\"div\", { className: \"history-empty\" }, \"\\u6682\\u65E0\\u5386\\u53F2\\u8BB0\\u5F55\")) : (React.createElement(\"div\", { className: \"history-list\" }, history\n                .filter(item => item.type === chartMode)\n                .map((item) => (React.createElement(\"div\", { key: item.id, className: \"history-item\" },\n                React.createElement(\"div\", { className: \"history-item-content\", onClick: () => {\n                        onLoadHistory(item);\n                        setShowHistoryModal(false);\n                    } },\n                    React.createElement(\"div\", { className: \"history-item-main\" },\n                        React.createElement(\"span\", { className: \"history-item-name\" }, item.type === 'single' ? item.name : `${item.name} 和 ${item.person2?.name || '第二个人'}`),\n                        React.createElement(\"span\", { className: \"history-item-info\" },\n                            item.year,\n                            \"-\",\n                            item.month,\n                            \"-\",\n                            item.day)),\n                    React.createElement(\"div\", { className: \"history-item-actions\" },\n                        React.createElement(\"button\", { className: \"history-action-button history-edit-icon\", onClick: (e) => {\n                                e.stopPropagation();\n                                onEditHistory(item);\n                                setEditingHistoryId(item.id);\n                                setShowHistoryModal(false);\n                            }, title: \"\\u7F16\\u8F91\" },\n                            React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"18\", height: \"18\", viewBox: \"0 0 24 24\", fill: \"none\", stroke: \"currentColor\", strokeWidth: \"2\", strokeLinecap: \"round\", strokeLinejoin: \"round\" },\n                                React.createElement(\"path\", { d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" }),\n                                React.createElement(\"path\", { d: \"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" }))),\n                        React.createElement(\"button\", { className: \"history-action-button history-delete-icon\", onClick: (e) => {\n                                e.stopPropagation();\n                                if (confirm('确定要删除这条历史记录吗？')) {\n                                    handleDeleteHistory(item.id);\n                                }\n                            }, title: \"\\u5220\\u9664\" },\n                            React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"18\", height: \"18\", viewBox: \"0 0 24 24\", fill: \"none\", stroke: \"currentColor\", strokeWidth: \"2\", strokeLinecap: \"round\", strokeLinejoin: \"round\" },\n                                React.createElement(\"polyline\", { points: \"3 6 5 6 21 6\" }),\n                                React.createElement(\"path\", { d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" }),\n                                React.createElement(\"line\", { x1: \"10\", y1: \"11\", x2: \"10\", y2: \"17\" }),\n                                React.createElement(\"line\", { x1: \"14\", y1: \"11\", x2: \"14\", y2: \"17\" }))))))))))),\n            React.createElement(\"div\", { className: \"history-modal-footer\" },\n                React.createElement(\"button\", { className: \"history-clear-button\", onClick: handleClearHistory, disabled: isCloudStorageEnabled, title: isCloudStorageEnabled ? \"云存储已启用，无法清空历史记录\" : \"清空所有历史记录\" }, \"\\u6E05\\u7A7A\\u5386\\u53F2\\u8BB0\\u5F55\")))));\n};\nexport default React.memo(HistoryModal);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useIztro } from \"iztro-hook\";\nimport { AppContainer } from \"./containers/AppContainer\";\nimport { ResultContainer } from \"./containers/ResultContainer\";\nimport { AIChatProvider } from \"./AIChat/AIChatContext\";\nimport { useHistoryManager } from \"./hooks/useHistoryManager\";\nimport FormPanel from \"./components/FormPanel\";\nimport HistoryModal from \"./components/HistoryModal\";\nimport \"./styles/index.css\";\nimport \"./styles/history-modal.css\";\nfunction App() {\n    // 控制当前模式（排盘或合盘）\n    const [chartMode, setChartMode] = useState(\"single\");\n    // 初始化表单状态\n    const [formData, setFormData] = useState({\n        name: \"\",\n        year: \"\",\n        month: \"\",\n        day: \"\",\n        birthTime: 0,\n        birthdayType: \"solar\",\n        gender: \"male\",\n    });\n    // 初始化合盘表单状态\n    const [synastryData, setSynastryData] = useState({\n        person1: {\n            name: \"\",\n            year: \"\",\n            month: \"\",\n            day: \"\",\n            birthTime: 0,\n            birthdayType: \"solar\",\n            gender: \"male\",\n        },\n        person2: {\n            name: \"\",\n            year: \"\",\n            month: \"\",\n            day: \"\",\n            birthTime: 0,\n            birthdayType: \"solar\",\n            gender: \"female\",\n        },\n    });\n    // 控制星盘显示的状态\n    const [showAstrolabe, setShowAstrolabe] = useState(false);\n    // 控制输入面板显示的状态\n    const [showInputPanel, setShowInputPanel] = useState(true);\n    // 使用历史管理Hook\n    const { history, showHistoryModal, setShowHistoryModal, searchTerm, setSearchTerm, showPasswordInput, setShowPasswordInput, password, setPassword, isCloudStorageEnabled, isLoading, editingHistoryId, setEditingHistoryId, handlePasswordSubmit, handleSaveHistory, handleDeleteHistory, handleClearHistory, } = useHistoryManager();\n    // 获取星盘数据\n    const { astrolabe } = useIztro({\n        birthday: `${formData.year}-${String(formData.month).padStart(2, '0')}-${String(formData.day).padStart(2, '0')}`,\n        birthTime: formData.birthTime,\n        gender: formData.gender,\n        birthdayType: formData.birthdayType,\n    });\n    // 获取第一个人星盘数据\n    const { astrolabe: astrolabe1 } = useIztro({\n        birthday: `${synastryData.person1.year}-${String(synastryData.person1.month).padStart(2, '0')}-${String(synastryData.person1.day).padStart(2, '0')}`,\n        birthTime: synastryData.person1.birthTime,\n        gender: synastryData.person1.gender,\n        birthdayType: synastryData.person1.birthdayType,\n    });\n    // 获取第二个人星盘数据\n    const { astrolabe: astrolabe2 } = useIztro({\n        birthday: `${synastryData.person2.year}-${String(synastryData.person2.month).padStart(2, '0')}-${String(synastryData.person2.day).padStart(2, '0')}`,\n        birthTime: synastryData.person2.birthTime,\n        gender: synastryData.person2.gender,\n        birthdayType: synastryData.person2.birthdayType,\n    });\n    // 从URL参数中读取数据并设置表单状态\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        // 从URL参数中读取各个字段\n        const name = urlParams.get('n') || \"\";\n        const year = urlParams.get('y') || \"\";\n        const month = urlParams.get('m') || \"\";\n        const day = urlParams.get('d') || \"\";\n        const birthTime = urlParams.get('t') ? parseInt(urlParams.get('t') || \"1\") : 0;\n        const birthdayType = urlParams.get('type') || \"solar\";\n        const gender = urlParams.get('g') || \"male\";\n        // 检查是否有完整的日期参数（年、月、日都是必需的）\n        const hasCompleteDateParams = !!(urlParams.get('y') && urlParams.get('m') && urlParams.get('d'));\n        setFormData({\n            name,\n            year,\n            month,\n            day,\n            birthTime,\n            birthdayType,\n            gender,\n        });\n        // 只有当日期参数完整时才显示星盘，否则显示输入页面\n        if (hasCompleteDateParams) {\n            setShowAstrolabe(true);\n            setShowInputPanel(false);\n        }\n        else {\n            setShowAstrolabe(false);\n            setShowInputPanel(true);\n        }\n    }, []);\n    // 动态更新主题颜色以适应暗色模式\n    useEffect(() => {\n        const updateThemeColor = (isDarkMode) => {\n            const themeColor = isDarkMode ? \"#1B1B1B\" : \"#ffffff\";\n            let metaThemeColor = document.querySelector(\"meta[name=theme-color]\");\n            if (metaThemeColor) {\n                metaThemeColor.setAttribute(\"content\", themeColor);\n            }\n            else {\n                metaThemeColor = document.createElement(\"meta\");\n                metaThemeColor.setAttribute(\"name\", \"theme-color\");\n                metaThemeColor.setAttribute(\"content\", themeColor);\n                document.getElementsByTagName(\"head\")[0].appendChild(metaThemeColor);\n            }\n        };\n        const darkModeMediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n        // 初始化主题颜色\n        updateThemeColor(darkModeMediaQuery.matches);\n        // 监听主题变化\n        const darkModeListener = (e) => {\n            updateThemeColor(e.matches);\n        };\n        darkModeMediaQuery.addEventListener(\"change\", darkModeListener);\n        // 清理监听器\n        return () => {\n            darkModeMediaQuery.removeEventListener(\"change\", darkModeListener);\n        };\n    }, []);\n    // 将表单数据编码到URL参数中\n    const updateUrlParams = useCallback((data) => {\n        try {\n            // 构建查询参数\n            const params = new URLSearchParams();\n            // 添加所有参数\n            if (data.name)\n                params.set('n', data.name);\n            params.set('y', data.year);\n            params.set('m', data.month);\n            params.set('d', data.day);\n            params.set('t', data.birthTime.toString());\n            params.set('type', data.birthdayType);\n            params.set('g', data.gender);\n            const newUrl = `${window.location.pathname}?${params.toString()}`;\n            window.history.replaceState({}, '', newUrl);\n        }\n        catch (error) {\n            console.error(\"编码URL参数失败:\", error);\n        }\n    }, []);\n    // 处理历史记录加载\n    const handleLoadHistory = useCallback((item) => {\n        if (item.type === 'single') {\n            setFormData({\n                name: item.name,\n                year: item.year,\n                month: item.month,\n                day: item.day,\n                birthTime: item.birthTime,\n                birthdayType: item.birthdayType,\n                gender: item.gender,\n            });\n            setChartMode('single');\n            updateUrlParams({\n                name: item.name,\n                year: item.year,\n                month: item.month,\n                day: item.day,\n                birthTime: item.birthTime,\n                birthdayType: item.birthdayType,\n                gender: item.gender,\n            });\n            setShowAstrolabe(true);\n            setShowInputPanel(false);\n        }\n        else {\n            setSynastryData({\n                person1: {\n                    name: item.name,\n                    year: item.year,\n                    month: item.month,\n                    day: item.day,\n                    birthTime: item.birthTime,\n                    birthdayType: item.birthdayType,\n                    gender: item.gender,\n                },\n                person2: item.person2 || {\n                    name: \"\",\n                    year: \"\",\n                    month: \"\",\n                    day: \"\",\n                    birthTime: 0,\n                    birthdayType: \"solar\",\n                    gender: \"female\",\n                }\n            });\n            setChartMode('synastry');\n            setShowAstrolabe(true);\n            setShowInputPanel(false);\n        }\n    }, [updateUrlParams]);\n    // 处理历史记录编辑\n    const handleEditHistory = useCallback((item) => {\n        if (item.type === 'single') {\n            setFormData({\n                name: item.name,\n                year: item.year,\n                month: item.month,\n                day: item.day,\n                birthTime: item.birthTime,\n                birthdayType: item.birthdayType,\n                gender: item.gender,\n            });\n            setChartMode('single');\n        }\n        else {\n            setSynastryData({\n                person1: {\n                    name: item.name,\n                    year: item.year,\n                    month: item.month,\n                    day: item.day,\n                    birthTime: item.birthTime,\n                    birthdayType: item.birthdayType,\n                    gender: item.gender,\n                },\n                person2: item.person2 || {\n                    name: \"\",\n                    year: \"\",\n                    month: \"\",\n                    day: \"\",\n                    birthTime: 0,\n                    birthdayType: \"solar\",\n                    gender: \"female\",\n                }\n            });\n            setChartMode('synastry');\n        }\n    }, []);\n    // 处理显示输入面板\n    const handleShowInputPanel = useCallback(() => {\n        setShowInputPanel(true);\n        setShowAstrolabe(false);\n        window.history.replaceState({}, '', window.location.pathname);\n        setEditingHistoryId(null);\n    }, []);\n    return (React.createElement(AppContainer, null,\n        React.createElement(AIChatProvider, null,\n            React.createElement(\"div\", { className: \"content\" },\n                showInputPanel && (React.createElement(FormPanel, { chartMode: chartMode, setChartMode: setChartMode, formData: formData, synastryData: synastryData, onFormChange: setFormData, onSynastryChange: (person, data) => setSynastryData({\n                        ...synastryData,\n                        [person]: data\n                    }), onRadioChange: (name, value) => setFormData({\n                        ...formData,\n                        [name]: value\n                    }), onSynastryRadioChange: (person, name, value) => setSynastryData({\n                        ...synastryData,\n                        [person]: {\n                            ...synastryData[person],\n                            [name]: value\n                        }\n                    }), onShowHistory: () => setShowHistoryModal(true), onSubmit: (e) => e.preventDefault(), onSynastrySubmit: (e) => e.preventDefault(), onSaveHistory: handleSaveHistory, updateUrlParams: updateUrlParams, setShowAstrolabe: setShowAstrolabe, setShowInputPanel: setShowInputPanel })),\n                React.createElement(HistoryModal, { history: history, showHistoryModal: showHistoryModal, setShowHistoryModal: setShowHistoryModal, searchTerm: searchTerm, setSearchTerm: setSearchTerm, showPasswordInput: showPasswordInput, setShowPasswordInput: setShowPasswordInput, password: password, setPassword: setPassword, isCloudStorageEnabled: isCloudStorageEnabled, isLoading: isLoading, editingHistoryId: editingHistoryId, setEditingHistoryId: setEditingHistoryId, handlePasswordSubmit: handlePasswordSubmit, handleDeleteHistory: handleDeleteHistory, handleClearHistory: handleClearHistory, onLoadHistory: handleLoadHistory, onEditHistory: handleEditHistory, chartMode: chartMode }),\n                showAstrolabe && (React.createElement(ResultContainer, { chartMode: chartMode, formData: formData, synastryData: synastryData, astrolabe: astrolabe, astrolabe1: astrolabe1, astrolabe2: astrolabe2, onShowInputPanel: handleShowInputPanel }))))));\n}\nexport default React.memo(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n// 注册 Service Worker\nconst registerServiceWorker = () => {\n    if ('serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            // 在生产环境中使用 Workbox 生成的 service worker\n            // 在开发环境中使用手动创建的 service worker\n            const swUrl = process.env.NODE_ENV === 'production' ? '/service-worker.js' : '/service-worker.js';\n            navigator.serviceWorker.register(swUrl)\n                .then(registration => {\n                console.log('ServiceWorker registration successful with scope: ', registration.scope);\n            })\n                .catch(error => {\n                console.log('ServiceWorker registration failed: ', error);\n            });\n        });\n    }\n};\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(React.createElement(React.StrictMode, null,\n    React.createElement(App, null)));\n// 注册 Service Worker\nregisterServiceWorker();\n"],"names":["STORAGE_KEY","AIChatContext","createContext","undefined","AIChatProvider","children","sessions","setSessions","useState","activeSessionId","setActiveSessionId","isLoading","setIsLoading","isGeneratingInBackground","setIsGeneratingInBackground","model","setModel","useEffect","savedSessions","localStorage","getItem","parsedSessions","JSON","parse","length","id","error","setItem","stringify","createSession","useCallback","newSession","replace","c","r","Math","random","toString","title","messages","createdAt","Date","now","prev","switchSession","sessionId","some","s","deleteSession","newSessions","filter","clearAllSessions","updateSessionMessages","newMessages","map","session","setMessages","addMessage","message","updateLastMessage","content","role","clearMessages","updateSessionTitle","activeSession","useMemo","find","contextValue","Provider","value","useAIChat","context","useContext","Error","AppContainer","isKeyboardVisible","setIsKeyboardVisible","keyboardHeight","setKeyboardHeight","test","navigator","userAgent","handleResize","viewportHeight","window","visualViewport","height","innerHeight","windowHeight","calculatedKeyboardHeight","screen","isKeyboardNowVisible","document","documentElement","style","setProperty","body","classList","add","remove","addEventListener","handleFocusIn","e","target","tagName","setTimeout","handleFocusOut","removeEventListener","useKeyboardDetector","safeArea","setSafeArea","top","right","bottom","left","updateSafeArea","tempElement","createElement","position","appendChild","computedStyle","getComputedStyle","newSafeArea","parseInt","getPropertyValue","removeChild","useSafeArea","className","Izstar","horoscopeMutagens","activeHeavenlyStem","hoverHeavenlyStem","palaceHeavenlyStem","star","mutagenStyle","index","getMutagensByHeavenlyStem","t","indexOf","name","hoverMutagenStyle","selfMutagenStyle","type","brightness","mutagen","MUTAGEN","kot","item","includes","show","key","scope","Izpalace","taichiPalace","focusedIndex","onFocused","horoscope","toggleActiveHeavenlyStem","setHoverHeavenlyStem","showDecadalScope","showYearlyScope","showMonthlyScope","showDailyScope","showHourlyScope","toggleScope","toggleTaichiPoint","palace","horoscopeNames","decadal","push","yearly","monthly","daily","hourly","age","heavenlyStem","fixIndex","onMouseEnter","onMouseLeave","majorStars","minorStars","adjectiveStars","slice","stars","onClick","changsheng12","boshi12","isBodyPalace","ages","join","range","palaceNames","yearlyDecStar","suiqian12","jiangqian12","earthlyBranch","Item","Line","line","useRef","strokeColor","element","getElementsByClassName","idx","canvasDom","current","width","getBoundingClientRect","w","h","points","canvasCtx","getContext","clearRect","strokeStyle","lineWidth","globalAlpha","dgIdx","q4Idx","h4Idx","beginPath","moveTo","lineTo","stroke","ref","IzpalaceCenter","astrolabe","arrowIndex","arrowScope","horoscopeDate","horoscopeHour","setHoroscopeDate","setHoroscopeHour","centerPalaceAlign","records","fiveElementsClass","nominalAge","chineseDate","solarDate","lunarDate","time","timeRange","zodiac","sign","soul","earthlyBranchOfSoulPalace","earthlyBranchOfBodyPalace","horoDate","dateStr","year","month","date","normalizeDateStr","dt","solar","lunar","solar2lunar","prevDecadalDisabled","setFullYear","getFullYear","onHoroscopeButtonClicked","birthYear","birthMonth","birthDate","birthday","hour","setDate","getDate","setMonth","getMonth","getTime","shouldBeDisabled","fixEarthlyBranchIndex","gender","rec","disabled","CHINESE_TIME","Iztrolabe","props","taichiPoint","setTaichiPoint","taichiPalaces","setTaichiPalaces","setActiveHeavenlyStem","setFocusedIndex","showDecadal","setShowDecadal","showYearly","setShowYearly","showMonthly","setShowMonthly","showDaily","setShowDaily","showHourly","setShowShowHourly","setHoroscope","birthTime","birthdayType","fixLeap","isLeapMonth","lang","astroType","options","toggleShowScope","dynamic","palaces","getPalaceNames","SegmentedControl","onChange","controlRef","sliderRef","activeElement","querySelector","buttonElement","nextElementSibling","updateSliderPosition","buttonRect","controlRect","opacity","animationId","requestAnimationFrame","resizeObserver","ResizeObserver","observe","cancelAnimationFrame","disconnect","handleButtonClick","optionValue","preventDefault","stopPropagation","onTouchStart","touches","touch","currentTarget","dataset","touchStartX","clientX","touchStartY","clientY","onTouchMove","parseFloat","deltaX","abs","deltaY","onTouchEnd","option","checked","label","AIChat","lazy","then","module","default","BackgroundAIIndicator","HistoryPanel","ResultContainerWithHistory","chartMode","formData","synastryData","astrolabe1","astrolabe2","onShowInputPanel","activeTab","setActiveTab","isInitialMount","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","Suspense","fallback","String","padStart","day","person1","person2","synastryAstrolabe","isSynastryMode","personNames","isVisible","onSelectSession","ResultContainer","CloudStorageService","initialize","isAuth","this","CLOUD_ENABLED_KEY","authenticate","password","CLOUD_PASSWORD","removeItem","clearAuthentication","uploadHistoryItem","response","fetch","WORKER_URL","method","headers","ok","status","statusText","json","success","downloadHistoryItem","deleteHistoryItem","getHistoryIds","ids","batchDownloadHistoryItems","items","clearAllHistory","isOnline","mode","cache","HistoryManager","isCloudEnabled","enableCloudStorage","isCloudStorageEnabled","disableCloudStorage","loadHistoryFromCloud","cloudHistory","forEach","localHistory","getHistory","mergedHistory","mergeHistories","splice","saveHistoryToCloud","history","mergedMap","Map","set","existingItem","get","timestamp","Array","from","values","sort","a","b","saveHistory","newHistoryItem","generateId","unshift","historyJson","getHistoryWithCloudSync","updateHistory","updatedItem","itemIndex","findIndex","deleteHistory","filteredHistory","clearHistory","substr","formatDate","getHours","getMinutes","FormContainer","setChartMode","onFormChange","onSynastryChange","onRadioChange","onSynastryRadioChange","onSubmit","onSynastrySubmit","onShowHistory","handleFormChange","handleSynastryChange","person","htmlFor","min","max","onSaveHistory","updateUrlParams","setShowAstrolabe","setShowInputPanel","handleSubmit","trim","alert","handleSynastrySubmit","showHistoryModal","setShowHistoryModal","searchTerm","setSearchTerm","showPasswordInput","setShowPasswordInput","setPassword","editingHistoryId","setEditingHistoryId","handlePasswordSubmit","handleDeleteHistory","handleClearHistory","onLoadHistory","onEditHistory","handlePasswordKeyDown","placeholder","onKeyDown","confirm","x1","y1","x2","y2","setFormData","setSynastryData","showAstrolabe","showInputPanel","handleSaveHistory","setHistory","setIsCloudStorageEnabled","async","initializeHistory","toLowerCase","useHistoryManager","urlParams","URLSearchParams","location","search","hasCompleteDateParams","updateThemeColor","isDarkMode","themeColor","metaThemeColor","setAttribute","getElementsByTagName","darkModeMediaQuery","matchMedia","matches","darkModeListener","data","params","newUrl","pathname","replaceState","handleLoadHistory","handleEditHistory","handleShowInputPanel","getElementById","render","serviceWorker","register","registration","catch"],"sourceRoot":""}